---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "ContainerAws"
description: |-
  An Anthos node pool running on AWS.
---

# google\_container\_aws\_node\_pool

An Anthos node pool running on AWS.


To get more information about NodePool, see:

* [API documentation](https://cloud.google.com/anthos/clusters/docs/multi-cloud/reference/rest)
* How-to Guides
    * [API reference](https://cloud.google.com/anthos/clusters/docs/multi-cloud/reference/rest/v1/projects.locations.awsClusters.awsNodePools)
    * [Multicloud overview](https://cloud.google.com/anthos/clusters/docs/multi-cloud)

## Example Usage - Container Aws Node Pool Basic


```hcl
data "google_project" "project" {
}

data "google_container_aws_versions" "versions" {
  project = data.google_project.project.project_id
  location = "us-west1"
}

resource "google_container_aws_cluster" "primary" {
  location = "us-west1"
  name     = "basic-cp"
  description = "A sample aws cluster"
  project     = data.google_project.project.project_id

  authorization {
    admin_users {
      username = "my@service-account.com"
    }
  }

  aws_region = ""

  control_plane {
    aws_services_authentication {
      role_arn          = "arn:aws:iam:::role/-1p-dev-oneplatform"
    }

    config_encryption {
      kms_key_arn = "arn:aws:kms:::key/"
    }

    database_encryption {
      kms_key_arn = "arn:aws:kms:::key/"
    }

    iam_instance_profile = "-1p-dev-controlplane"
    subnet_ids           = [""]
    version              = data.google_container_aws_versions.versions.valid_versions[0]

    tags = {
      owner = "my@service-account.com"
    }
  }

  fleet {
    project = "projects/${data.google_project.project.number}"
  }

  networking {
    pod_address_cidr_blocks     = ["10.2.0.0/16"]
    service_address_cidr_blocks = ["10.1.0.0/16"]
    vpc_id                      = ""
  }
}

resource "google_container_aws_node_pool" "primary" {
  location = "us-west1"
  name     = "basic-np"
  project  = data.google_project.project.project_id
  cluster  = google_container_aws_cluster.primary.name
  version  = data.google_container_aws_versions.versions.valid_versions[0]

  autoscaling {
    min_node_count = 1
    max_node_count = 5
  }

  subnet_id = ""

  max_pods_constraint {
    max_pods_per_node = 110
  }

  config {
    iam_instance_profile = "-1p-dev-nodepool"

    config_encryption {
      kms_key_arn = "arn:aws:kms:::key/"
    }
  }
}
```
## Example Usage - Container Aws Node Pool Full


```hcl
data "google_project" "project" {
}

data "google_container_aws_versions" "versions" {
  project = data.google_project.project.project_id
  location = "us-west1"
}

resource "google_container_aws_cluster" "primary" {
  location = "us-west1"
  name     = "full-cp"
  description = "A sample aws cluster"
  project     = data.google_project.project.project_id

  authorization {
    admin_users {
      username = "my@service-account.com"
    }
  }

  aws_region = ""

  control_plane {
    aws_services_authentication {
      role_arn          = "arn:aws:iam:::role/-1p-dev-oneplatform"
    }

    config_encryption {
      kms_key_arn = "arn:aws:kms:::key/"
    }

    database_encryption {
      kms_key_arn = "arn:aws:kms:::key/"
    }

    iam_instance_profile = "-1p-dev-controlplane"
    subnet_ids           = [""]
    version              = data.google_container_aws_versions.versions.valid_versions[0]
    security_group_ids   = [""]

    ssh_config {
      ec2_key_pair = "-1p-dev-ssh"
    }

    tags = {
      owner = "my@service-account.com"
    }
  }

  fleet {
    project = "projects/${data.google_project.project.number}"
  }

  networking {
    pod_address_cidr_blocks     = ["10.2.0.0/16"]
    service_address_cidr_blocks = ["10.1.0.0/16"]
    vpc_id                      = ""
  }
}

resource "google_container_aws_node_pool" "primary" {
  location = "us-west1"
  name     = "full-np"
  project  = data.google_project.project.project_id
  cluster  = google_container_aws_cluster.primary.name
  version  = data.google_container_aws_versions.versions.valid_versions[0]

  autoscaling {
    min_node_count = 1
    max_node_count = 5
  }

  subnet_id = ""

  max_pods_constraint {
    max_pods_per_node = 110
  }

  config {
    instance_type        = "m5.large"
    iam_instance_profile = "-1p-dev-nodepool"

    config_encryption {
      kms_key_arn = "arn:aws:kms:::key/"
    }

    root_volume {
      size_gib    = 10
      kms_key_arn = "arn:aws:kms:::key/"
      volume_type = "GP3"
      iops        = 3000
      throughput  = 500
    }

    taints {
      key    = "taint-key"
      value  = "taint-value"
      effect = "PREFER_NO_SCHEDULE"
    }

    labels = {
      label-one = "value-one"
    }

    tags = {
      tag-one = "value-one"
    }

    ssh_config {
      ec2_key_pair = "-1p-dev-ssh"
    }

    proxy_config {
      secret_arn     = "arn:aws:secretsmanager:us-west-2:126285863215:secret:proxy_config20210824150329476300000001-ABCDEF"
      secret_version = "12345678-ABCD-EFGH-IJKL-987654321098"
    }

    image_type = "ubuntu"

    autoscaling_metrics_collection {
      granularity = "1Minute"
      metrics     = ["GroupMinSize"]
    }

    security_group_ids = [""]
  }

  annotations = {
    label-one = "value-one"
  }
}
```
## Example Usage - Container Aws Node Pool Beta


```hcl
data "google_project" "project" {
  provider = google-beta
}

data "google_container_aws_versions" "versions" {
  provider = google-beta
  project = data.google_project.project.project_id
  location = "us-west1"
}

resource "google_container_aws_cluster" "primary" {
  provider = google-beta
  location = "us-west1"
  name     = "beta-cp"
  description = "A sample aws cluster"
  project     = data.google_project.project.project_id

  authorization {
    admin_users {
      username = "my@service-account.com"
    }
  }

  aws_region = ""

  control_plane {
    aws_services_authentication {
      role_arn          = "arn:aws:iam:::role/-1p-dev-oneplatform"
    }

    config_encryption {
      kms_key_arn = "arn:aws:kms:::key/"
    }

    database_encryption {
      kms_key_arn = "arn:aws:kms:::key/"
    }

    iam_instance_profile = "-1p-dev-controlplane"
    subnet_ids           = [""]
    version              = data.google_container_aws_versions.versions.valid_versions[0]

    tags = {
      owner = "my@service-account.com"
    }
  }

  fleet {
    project = "projects/${data.google_project.project.number}"
  }

  networking {
    pod_address_cidr_blocks     = ["10.2.0.0/16"]
    service_address_cidr_blocks = ["10.1.0.0/16"]
    vpc_id                      = ""
  }
}

resource "google_container_aws_node_pool" "primary" {
  provider = google-beta
  location = "us-west1"
  name     = "beta-np"
  project  = data.google_project.project.project_id
  cluster  = google_container_aws_cluster.primary.name
  version  = data.google_container_aws_versions.versions.valid_versions[0]

  autoscaling {
    min_node_count = 1
    max_node_count = 5
  }

  subnet_id = ""

  max_pods_constraint {
    max_pods_per_node = 110
  }

  config {
    spot_config {
      instance_types = ["m5.large"]
    }

    iam_instance_profile = "-1p-dev-nodepool"

    config_encryption {
      kms_key_arn = "arn:aws:kms:::key/"
    }

    instance_placement {
      tenancy = "DEFAULT"
    }
  }

  management {
    auto_repair = true
  }
}
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  The name of this resource.

* `version` -
  (Required)
  The Kubernetes version to run on this node pool (e.g. `1.19.10-gke.1000`). You can list all supported versions on a given Google Cloud region by calling GetAwsServerConfig.

* `config` -
  (Required)
  The configuration of the node pool.
  Structure is [documented below](#nested_config).

* `autoscaling` -
  (Required)
  Autoscaler configuration for this node pool.
  Structure is [documented below](#nested_autoscaling).

* `subnet_id` -
  (Required)
  The subnet where the node pool node run.

* `max_pods_constraint` -
  (Required)
  The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
  Structure is [documented below](#nested_max_pods_constraint).

* `location` -
  (Required)
  The location for the resource

* `cluster` -
  (Required)
  The awsCluster for the resource


<a name="nested_config"></a>The `config` block supports:

* `instance_type` -
  (Optional)
  Optional. The AWS instance type. When unspecified, it defaults to `m5.large`.

* `root_volume` -
  (Optional)
  Optional. Template for the root volume provisioned for node pool nodes. Volumes will be provisioned in the availability zone assigned to the node pool subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.
  Structure is [documented below](#nested_root_volume).

* `taints` -
  (Optional)
  Optional. The initial taints assigned to nodes of this node pool.
  Structure is [documented below](#nested_taints).

* `labels` -
  (Optional)
  Optional. The initial labels assigned to nodes of this node pool. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.

* `tags` -
  (Optional)
  Optional. Key/value metadata to assign to each underlying AWS resource. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.

* `iam_instance_profile` -
  (Required)
  The name of the AWS IAM role assigned to nodes in the pool.

* `config_encryption` -
  (Required)
  The ARN of the AWS KMS key used to encrypt node pool configuration.
  Structure is [documented below](#nested_config_encryption).

* `ssh_config` -
  (Optional)
  Optional. The SSH configuration.
  Structure is [documented below](#nested_ssh_config).

* `spot_config` -
  (Optional, [Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html))
  Optional. When specified, the node pool will provision Spot instances from the set of spot_config.instance_types. This field is mutually exclusive with `instance_type`
  Structure is [documented below](#nested_spot_config).

* `security_group_ids` -
  (Optional)
  Optional. The IDs of additional security groups to add to nodes in this pool. The manager will automatically create security groups with minimum rules needed for a functioning cluster.

* `proxy_config` -
  (Optional)
  Proxy configuration for outbound HTTP(S) traffic.
  Structure is [documented below](#nested_proxy_config).

* `instance_placement` -
  (Optional, [Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html))
  Details of placement information for an instance.
  Structure is [documented below](#nested_instance_placement).

* `image_type` -
  (Optional)
  The OS image type to use on node pool instances.

* `autoscaling_metrics_collection` -
  (Optional)
  Optional. Configuration related to CloudWatch metrics collection on the Auto Scaling group of the node pool. When unspecified, metrics collection is disabled.
  Structure is [documented below](#nested_autoscaling_metrics_collection).


<a name="nested_root_volume"></a>The `root_volume` block supports:

* `size_gib` -
  (Optional)
  Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.

* `volume_type` -
  (Optional)
  Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume.
  Default value is `GP2`.
  Possible values are: `VOLUME_TYPE_UNSPECIFIED`, `GP2`, `GP3`.

* `iops` -
  (Optional)
  Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.

* `throughput` -
  (Optional)
  Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3.

* `kms_key_arn` -
  (Optional)
  Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.

<a name="nested_taints"></a>The `taints` block supports:

* `key` -
  (Required)
  Key for the taint.

* `value` -
  (Required)
  Value for the taint.

* `effect` -
  (Required)
  The taint effect.
  Possible values are: `EFFECT_UNSPECIFIED`, `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, `NO_EXECUTE`.

<a name="nested_config_encryption"></a>The `config_encryption` block supports:

* `kms_key_arn` -
  (Required)
  The ARN of the AWS KMS key used to encrypt node pool configuration.

<a name="nested_ssh_config"></a>The `ssh_config` block supports:

* `ec2_key_pair` -
  (Required)
  The name of the EC2 key pair used to login into cluster machines.

<a name="nested_spot_config"></a>The `spot_config` block supports:

* `instance_types` -
  (Required, [Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html))
  List of AWS EC2 instance types for creating a spot node pool's nodes. The specified instance types must have the same number of CPUs and memory. You can use the Amazon EC2 Instance Selector tool (https://github.com/aws/amazon-ec2-instance-selector) to choose instance types with matching CPU and memory

<a name="nested_proxy_config"></a>The `proxy_config` block supports:

* `secret_arn` -
  (Required)
  The ARN of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.

* `secret_version` -
  (Required)
  The version string of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.

<a name="nested_instance_placement"></a>The `instance_placement` block supports:

* `tenancy` -
  (Optional)
  The tenancy for the instance.
  Default value is `DEFAULT`.
  Possible values are: `TENANCY_UNSPECIFIED`, `DEFAULT`, `DEDICATED`, `HOST`.

<a name="nested_autoscaling_metrics_collection"></a>The `autoscaling_metrics_collection` block supports:

* `granularity` -
  (Required)
  The frequency at which EC2 Auto Scaling sends aggregated data to AWS CloudWatch. The only valid value is "1Minute".

* `metrics` -
  (Optional)
  The metrics to enable. For a list of valid metrics, see https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_EnableMetricsCollection.html. If you specify granularity and don't specify any metrics, all metrics are enabled.

<a name="nested_autoscaling"></a>The `autoscaling` block supports:

* `min_node_count` -
  (Required)
  Minimum number of nodes in the NodePool. Must be >= 1 and <= max_node_count.

* `max_node_count` -
  (Required)
  Maximum number of nodes in the NodePool. Must be >= min_node_count.

<a name="nested_max_pods_constraint"></a>The `max_pods_constraint` block supports:

* `max_pods_per_node` -
  (Required)
  The maximum number of pods to schedule on a single node.

- - -


* `annotations` -
  (Optional)
  Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.

* `management` -
  (Optional, [Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html))
  The Management configuration for this node pool.
  Structure is [documented below](#nested_management).

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


<a name="nested_management"></a>The `management` block supports:

* `auto_repair` -
  (Optional)
  Whether or not the nodes will be automatically repaired. When set to true,
  the nodes in this node pool will be monitored and if they fail health
  checks consistently over a period of time, an automatic repair action
  will be triggered to replace them with new nodes.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/awsClusters/{{cluster}}/awsNodePools/{{name}}`

* `state` -
  Output only. The lifecycle state of the node pool.

* `uid` -
  Output only. A globally unique identifier for the node pool.

* `reconciling` -
  Output only. If set, there are currently changes in flight to the node pool.

* `create_time` -
  Output only. The time at which this node pool was created.

* `update_time` -
  Output only. The time at which this node pool was last updated.

* `etag` -
  Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.

* `errors` -
  A set of errors found in the node pool.
  Structure is [documented below](#nested_errors).


<a name="nested_errors"></a>The `errors` block contains:

* `message` -
  (Output)
  Human-friendly description of the error.

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


NodePool can be imported using any of these accepted formats:

```
$ terraform import google_container_aws_node_pool.default projects/{{project}}/locations/{{location}}/awsClusters/{{cluster}}/awsNodePools/{{name}}
$ terraform import google_container_aws_node_pool.default {{project}}/{{location}}/{{cluster}}/{{name}}
$ terraform import google_container_aws_node_pool.default {{location}}/{{cluster}}/{{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
