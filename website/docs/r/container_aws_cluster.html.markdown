---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "ContainerAws"
description: |-
  An Anthos cluster running on AWS.
---

# google\_container\_aws\_cluster

An Anthos cluster running on AWS.


To get more information about Cluster, see:

* [API documentation](https://cloud.google.com/anthos/clusters/docs/multi-cloud/reference/rest)
* How-to Guides
    * [API reference](https://cloud.google.com/anthos/clusters/docs/multi-cloud/reference/rest/v1/projects.locations.awsClusters)
    * [Multicloud overview](https://cloud.google.com/anthos/clusters/docs/multi-cloud)

## Example Usage - Container Aws Cluster Basic


```hcl
data "google_project" "project" {
}

data "google_container_aws_versions" "versions" {
  project = data.google_project.project.project_id
  location = "us-west1"
}

resource "google_container_aws_cluster" "primary" {
  location = "us-west1"
  name     = "basic"
  description = "A sample aws cluster"
  project     = data.google_project.project.project_id

  authorization {
    admin_users {
      username = "my@service-account.com"
    }
  }

  aws_region = ""

  control_plane {
    aws_services_authentication {
      role_arn          = "arn:aws:iam:::role/-1p-dev-oneplatform"
    }

    config_encryption {
      kms_key_arn = "arn:aws:kms:::key/"
    }

    database_encryption {
      kms_key_arn = "arn:aws:kms:::key/"
    }

    iam_instance_profile = "-1p-dev-controlplane"
    subnet_ids           = [""]
    version              = data.google_container_aws_versions.versions.valid_versions[0]

    tags = {
      owner = "my@service-account.com"
    }
  }

  fleet {
    project = "projects/${data.google_project.project.number}"
  }

  networking {
    pod_address_cidr_blocks     = ["10.2.0.0/16"]
    service_address_cidr_blocks = ["10.1.0.0/16"]
    vpc_id                      = ""
  }
}
```
## Example Usage - Container Aws Cluster Full


```hcl
data "google_project" "project" {
}

data "google_container_aws_versions" "versions" {
  project = data.google_project.project.project_id
  location = "us-west1"
}

resource "google_container_aws_cluster" "primary" {
  location = "us-west1"
  name     = "full"
  description = "A sample aws cluster"
  project     = data.google_project.project.project_id

  authorization {
    admin_users {
      username = "my@service-account.com"
    }
  }

  aws_region = ""

  control_plane {
    aws_services_authentication {
      role_arn          = "arn:aws:iam:::role/-1p-dev-oneplatform"
      role_session_name = "-1p-dev-session"
    }

    config_encryption {
      kms_key_arn = "arn:aws:kms:::key/"
    }

    database_encryption {
      kms_key_arn = "arn:aws:kms:::key/"
    }

    iam_instance_profile = "-1p-dev-controlplane"
    subnet_ids           = [""]
    version              = "${data.google_container_aws_versions.versions.valid_versions[0]}"
    instance_type        = "t3.medium"

    main_volume {
      iops        = 3000
      kms_key_arn = "arn:aws:kms:::key/"
      size_gib    = 10
      throughput  = 500
      volume_type = "GP3"
    }

    proxy_config {
      secret_arn     = "arn:aws:secretsmanager:us-west-2:126285863215:secret:proxy_config20210824150329476300000001-ABCDEF"
      secret_version = "12345678-ABCD-EFGH-IJKL-987654321098"
    }

    root_volume {
      iops        = 3000
      kms_key_arn = "arn:aws:kms:::key/"
      size_gib    = 10
      throughput  = 500
      volume_type = "GP3"
    }

    security_group_ids = [""]

    ssh_config {
      ec2_key_pair = "-1p-dev-ssh"
    }

    tags = {
      owner = "my@service-account.com"
    }
  }

  fleet {
    project = "projects/${data.google_project.project.number}"
  }

  networking {
    pod_address_cidr_blocks     = ["10.2.0.0/16"]
    service_address_cidr_blocks = ["10.1.0.0/16"]
    vpc_id                      = ""
  }

  annotations = {
    label-one = "value-one"
  }

  logging_config {
    component_config {
      enable_components = ["SYSTEM_COMPONENTS", "WORKLOADS"]
    }
  }

  monitoring_config {
    managed_prometheus_config {
      enabled = true
    }
  }
}
```
## Example Usage - Container Aws Cluster Beta


```hcl
data "google_project" "project" {
  provider = google-beta
}

data "google_container_aws_versions" "versions" {
  provider = google-beta
  project = data.google_project.project.project_id
  location = "us-west1"
}

resource "google_container_aws_cluster" "primary" {
  provider = google-beta
  location = "us-west1"
  name     = "beta"
  description = "A sample aws cluster"
  project     = data.google_project.project.project_id

  authorization {
    admin_users {
      username = "my@service-account.com"
    }
  }

  aws_region = ""

  control_plane {
    aws_services_authentication {
      role_arn          = "arn:aws:iam:::role/-1p-dev-oneplatform"
    }

    config_encryption {
      kms_key_arn = "arn:aws:kms:::key/"
    }

    database_encryption {
      kms_key_arn = "arn:aws:kms:::key/"
    }

    iam_instance_profile = "-1p-dev-controlplane"
    subnet_ids           = [""]
    version              = data.google_container_aws_versions.versions.valid_versions[0]

    tags = {
      owner = "my@service-account.com"
    }

    instance_placement {
      tenancy = "DEFAULT"
    }
  }

  fleet {
    project = "projects/${data.google_project.project.number}"
  }

  networking {
    pod_address_cidr_blocks     = ["10.2.0.0/16"]
    service_address_cidr_blocks = ["10.1.0.0/16"]
    vpc_id                      = ""
  }
}
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  The name of this resource.

* `networking` -
  (Required)
  Cluster-wide networking configuration.
  Structure is [documented below](#nested_networking).

* `aws_region` -
  (Required)
  The AWS region where the cluster runs. Each Google Cloud region supports a subset of nearby AWS regions. You can call to list all supported AWS regions within a given Google Cloud region.

* `control_plane` -
  (Required)
  Configuration related to the cluster control plane.
  Structure is [documented below](#nested_control_plane).

* `authorization` -
  (Required)
  Configuration related to the cluster RBAC settings.
  Structure is [documented below](#nested_authorization).

* `fleet` -
  (Required)
  Fleet configuration.
  Structure is [documented below](#nested_fleet).

* `location` -
  (Required)
  The location for the resource


<a name="nested_networking"></a>The `networking` block supports:

* `vpc_id` -
  (Required)
  The VPC associated with the cluster. All component clusters (i.e. control plane and node pools) run on a single VPC. This field cannot be changed after creation.

* `pod_address_cidr_blocks` -
  (Required)
  All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.

* `service_address_cidr_blocks` -
  (Required)
  All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.

* `per_node_pool_sg_rules_disabled` -
  (Optional)
  Disable the per node pool subnet security group rules on the control plane security group. When set to true, you must also provide one or more security groups that ensure node pools are able to send requests to the control plane on TCP/443 and TCP/8132. Failure to do so may result in unavailable node pools.

<a name="nested_control_plane"></a>The `control_plane` block supports:

* `version` -
  (Required)
  The Kubernetes version to run on control plane replicas (e.g. `1.19.10-gke.1000`). You can list all supported versions on a given Google Cloud region by calling .

* `instance_type` -
  (Optional)
  Optional. The AWS instance type. When unspecified, it defaults to `m5.large`.

* `ssh_config` -
  (Optional)
  Optional. SSH configuration for how to access the underlying control plane machines.
  Structure is [documented below](#nested_ssh_config).

* `subnet_ids` -
  (Required)
  The list of subnets where control plane replicas will run. A replica will be provisioned on each subnet and up to three values can be provided. Each subnet must be in a different AWS Availability Zone (AZ).

* `config_encryption` -
  (Required)
  The ARN of the AWS KMS key used to encrypt cluster configuration.
  Structure is [documented below](#nested_config_encryption).

* `security_group_ids` -
  (Optional)
  Optional. The IDs of additional security groups to add to control plane replicas. The Anthos Multi-Cloud API will automatically create and manage security groups with the minimum rules needed for a functioning cluster.

* `iam_instance_profile` -
  (Required)
  The name of the AWS IAM instance pofile to assign to each control plane replica.

* `root_volume` -
  (Optional)
  Optional. Configuration related to the root volume provisioned for each control plane replica. Volumes will be provisioned in the availability zone associated with the corresponding subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.
  Structure is [documented below](#nested_root_volume).

* `main_volume` -
  (Optional)
  Optional. Configuration related to the main volume provisioned for each control plane replica. The main volume is in charge of storing all of the cluster's etcd state. Volumes will be provisioned in the availability zone associated with the corresponding subnet. When unspecified, it defaults to 8 GiB with the GP2 volume type.
  Structure is [documented below](#nested_main_volume).

* `database_encryption` -
  (Required)
  The ARN of the AWS KMS key used to encrypt cluster secrets.
  Structure is [documented below](#nested_database_encryption).

* `tags` -
  (Optional)
  Optional. A set of AWS resource tags to propagate to all underlying managed AWS resources. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.

* `aws_services_authentication` -
  (Required)
  Authentication configuration for management of AWS resources.
  Structure is [documented below](#nested_aws_services_authentication).

* `proxy_config` -
  (Optional)
  Proxy configuration for outbound HTTP(S) traffic.
  Structure is [documented below](#nested_proxy_config).

* `instance_placement` -
  (Optional, [Beta](https://terraform.io/docs/providers/google/guides/provider_versions.html))
  Details of placement information for an instance.
  Structure is [documented below](#nested_instance_placement).


<a name="nested_ssh_config"></a>The `ssh_config` block supports:

* `ec2_key_pair` -
  (Required)
  The name of the EC2 key pair used to login into cluster machines.

<a name="nested_config_encryption"></a>The `config_encryption` block supports:

* `kms_key_arn` -
  (Required)
  The ARN of the AWS KMS key used to encrypt cluster configuration.

<a name="nested_root_volume"></a>The `root_volume` block supports:

* `size_gib` -
  (Optional)
  Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.

* `volume_type` -
  (Optional)
  Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume.
  Default value is `GP2`.
  Possible values are: `VOLUME_TYPE_UNSPECIFIED`, `GP2`, `GP3`.

* `iops` -
  (Optional)
  Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.

* `throughput` -
  (Optional)
  Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3.

* `kms_key_arn` -
  (Optional)
  Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.

<a name="nested_main_volume"></a>The `main_volume` block supports:

* `size_gib` -
  (Optional)
  Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.

* `volume_type` -
  (Optional)
  Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume.
  Default value is `GP2`.
  Possible values are: `VOLUME_TYPE_UNSPECIFIED`, `GP2`, `GP3`.

* `iops` -
  (Optional)
  Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.

* `throughput` -
  (Optional)
  Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3.

* `kms_key_arn` -
  (Optional)
  Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.

<a name="nested_database_encryption"></a>The `database_encryption` block supports:

* `kms_key_arn` -
  (Required)
  The ARN of the AWS KMS key used to encrypt cluster secrets.

<a name="nested_aws_services_authentication"></a>The `aws_services_authentication` block supports:

* `role_arn` -
  (Required)
  The Amazon Resource Name (ARN) of the role that the Anthos Multi-Cloud API will assume when managing AWS resources on your account.

* `role_session_name` -
  (Optional)
  Optional. An identifier for the assumed role session. When unspecified, it defaults to `multicloud-service-agent`.

<a name="nested_proxy_config"></a>The `proxy_config` block supports:

* `secret_arn` -
  (Required)
  The ARN of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.

* `secret_version` -
  (Required)
  The version string of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.

<a name="nested_instance_placement"></a>The `instance_placement` block supports:

* `tenancy` -
  (Optional)
  The tenancy for the instance.
  Possible values are: `TENANCY_UNSPECIFIED`, `DEFAULT`, `DEDICATED`, `HOST`.

<a name="nested_authorization"></a>The `authorization` block supports:

* `admin_users` -
  (Required)
  Users to perform operations as a cluster admin. A managed ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole to the users. Up to ten admin users can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
  Structure is [documented below](#nested_admin_users).


<a name="nested_admin_users"></a>The `admin_users` block supports:

* `username` -
  (Required)
  The name of the user, e.g. `my-gcp-id@gmail.com`.

<a name="nested_fleet"></a>The `fleet` block supports:

* `project` -
  (Required)
  The number of the Fleet host project where this cluster will be registered.

* `membership` -
  (Output)
  The name of the managed Hub Membership resource associated to this cluster. Membership names are formatted as projects/<project-number>/locations/global/membership/<cluster-id>.

- - -


* `description` -
  (Optional)
  Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.

* `annotations` -
  (Optional)
  Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.

* `logging_config` -
  (Optional)
  Logging configuration.
  Structure is [documented below](#nested_logging_config).

* `monitoring_config` -
  (Optional)
  Monitoring configuration.
  Structure is [documented below](#nested_monitoring_config).

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


<a name="nested_logging_config"></a>The `logging_config` block supports:

* `component_config` -
  (Optional)
  Configuration of the logging components.
  Structure is [documented below](#nested_component_config).


<a name="nested_component_config"></a>The `component_config` block supports:

* `enable_components` -
  (Optional)
  Components of the logging configuration to be enabled.
  Each value may be one of: `SYSTEM_COMPONENTS`, `WORKLOADS`.

<a name="nested_monitoring_config"></a>The `monitoring_config` block supports:

* `managed_prometheus_config` -
  (Optional)
  Configuration of the Google Cloud Managed Service for Prometheus.
  Structure is [documented below](#nested_managed_prometheus_config).


<a name="nested_managed_prometheus_config"></a>The `managed_prometheus_config` block supports:

* `enabled` -
  (Optional)
  Configuration of the enable Managed Collection.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/awsClusters/{{name}}`

* `state` -
  Output only. The current state of the cluster.

* `endpoint` -
  Output only. The endpoint of the cluster's API server.

* `uid` -
  Output only. A globally unique identifier for the cluster.

* `reconciling` -
  Output only. If set, there are currently changes in flight to the cluster.

* `create_time` -
  Output only. The time at which this cluster was created.

* `update_time` -
  Output only. The time at which this cluster was last updated.

* `etag` -
  Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.

* `workload_identity_config` -
  Output only. Workload Identity settings.
  Structure is [documented below](#nested_workload_identity_config).


<a name="nested_workload_identity_config"></a>The `workload_identity_config` block contains:

* `issuer_uri` -
  (Optional)
  The OIDC issuer URL for this cluster.

* `workload_pool` -
  (Optional)
  The Workload Identity Pool associated to the cluster.

* `identity_provider` -
  (Optional)
  The ID of the OIDC Identity Provider (IdP) associated to the Workload Identity Pool.

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


Cluster can be imported using any of these accepted formats:

```
$ terraform import google_container_aws_cluster.default projects/{{project}}/locations/{{location}}/awsClusters/{{name}}
$ terraform import google_container_aws_cluster.default {{project}}/{{location}}/{{name}}
$ terraform import google_container_aws_cluster.default {{location}}/{{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
