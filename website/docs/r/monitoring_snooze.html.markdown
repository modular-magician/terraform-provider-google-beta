---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Cloud (Stackdriver) Monitoring"
description: |-
  A Snooze will prevent any alerts from being opened, and close any that are already open.
---

# google_monitoring_snooze

A Snooze will prevent any alerts from being opened, and close any that are already open.
The Snooze will work on alerts that match the criteria defined in the Snooze.
The Snooze will be active from interval start time through interval end time.

~> **Note:** Monitoring Snoozes cannot be deleted from the Google Cloud Platform.
Destroying a Terraform-managed Snooze will cancel the snooze and remove it from state but
*will not delete the resource from the project.*


To get more information about Snooze, see:

* [API documentation](https://cloud.google.com/monitoring/api/ref_v3/rest#rest-resource:-v3.projects.snoozes)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/monitoring/alerts/snooze)

## Example Usage - Monitoring Snooze Basic


```hcl
resource "google_monitoring_alert_policy" "alert_policy" {
  display_name = "My Alert Policy"
  combiner     = "OR"
  conditions {
    display_name = "test condition"
    condition_threshold {
      filter     = "metric.type=\"compute.googleapis.com/instance/disk/write_bytes_count\" AND resource.type=\"gce_instance\""
      duration   = "60s"
      comparison = "COMPARISON_GT"
      aggregations {
        alignment_period   = "60s"
        per_series_aligner = "ALIGN_RATE"
      }
    }
  }
}

resource "google_monitoring_snooze"  "snooze" {
  display_name = "My Snooze"
  
  interval {
      start_time = timeadd(plantimestamp(), "1h")
      end_time   = timeadd(plantimestamp(), "2h")
  }

  criteria {
    policies = [
        google_monitoring_alert_policy.alert_policy.id
    ]
  }
}
```

## Argument Reference

The following arguments are supported:


* `display_name` -
  (Required)
  A short name or phrase used to identify the Snooze.
  The display name is limited to 512 Unicode characters.

* `criteria` -
  (Required)
  This defines the criteria for applying the Snooze
  Structure is [documented below](#nested_criteria).

* `interval` -
  (Required)
  The Snooze will be active from interval.start_time through interval.end_time.
  The interval.start_time cannot be in the past.
  Structure is [documented below](#nested_interval).


<a name="nested_criteria"></a>The `criteria` block supports:

* `policies` -
  (Optional)
  The specific AlertPolicy names for the alert that should be snoozed.
  The format is: `projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[POLICY_ID]`
  There is a limit of 16 policies per snooze.

<a name="nested_interval"></a>The `interval` block supports:

* `start_time` -
  (Optional)
  The beginning of the time interval. The default value for the start time is the end time.
  The start time must not be later than the end time.
  A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
  Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".

* `end_time` -
  (Required)
  The end of the time interval.
  A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
  Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".

- - -


* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `{{name}}`

* `name` -
  The unique resource name for this Snooze.
  Its syntax is: projects/[PROJECT_ID_OR_NUMBER]/snoozes/[SNOOZE_ID]


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


Snooze can be imported using any of these accepted formats:

* `{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Snooze using one of the formats above. For example:

```tf
import {
  id = "{{name}}"
  to = google_monitoring_snooze.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), Snooze can be imported using one of the formats above. For example:

```
$ terraform import google_monitoring_snooze.default {{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
