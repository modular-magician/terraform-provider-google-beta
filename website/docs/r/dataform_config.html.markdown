---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Dataform"
description: |-
  A singleton resource represents a Dataform configuration for project location.
---

# google_dataform_config

A singleton resource represents a Dataform configuration for project location.

~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/guides/provider_versions.html) for more details on beta resources.

To get more information about Config, see:

* [API documentation](https://cloud.google.com/dataform/reference/rest/v1beta1/projects.locations)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/dataform/docs/)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md&cloudshell_working_dir=dataform_config&open_in_editor=main.tf" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Dataform Config


```hcl
resource "google_kms_key_ring" "keyring" {
  provider = google-beta
  
  name     = "example-key-ring"
  location = "us-central1"
}

resource "google_kms_crypto_key" "example_key" {
  provider = google-beta
  
  name            = "example-crypto-key-name"
  key_ring        = google_kms_key_ring.keyring.id
}


resource "google_dataform_config" "dataform_config" {
  provider = google-beta
  name = "dataform_config"
  default_kms_key_name = google_kms_crypto_key.example_key.id
}
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  The config's name.


- - -


* `default_kms_key_name` -
  (Optional)
  Optional. The customer managed KMS key that will be used as default for encryption of user data.

* `region` -
  (Optional)
  A reference to the region

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{region}}/config`


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


Config can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{region}}/config`
* `{{project}}/{{region}}`
* `{{region}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Config using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{region}}/config"
  to = google_dataform_config.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), Config can be imported using one of the formats above. For example:

```
$ terraform import google_dataform_config.default projects/{{project}}/locations/{{region}}/config
$ terraform import google_dataform_config.default {{project}}/{{region}}
$ terraform import google_dataform_config.default {{region}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
