---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Vertex AI"
description: |-
  A trained machine learning Model.
---

# google_vertex_ai_models

A trained machine learning Model.


To get more information about Models, see:

* [API documentation](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.models)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/vertex-ai/docs)

## Example Usage - Vertex Ai Model Source Basic


```hcl
resource "google_vertex_ai_models" "model" {
  model_id = "test-model"
  project = "my-project-name"
  source_model = "projects/my-project-name>/locations/us-central1/models/4469245519628878651"

  region       = "us-central1"
}
```

## Argument Reference

The following arguments are supported:



- - -


* `description` -
  (Optional)
  Description of the Model.

* `metadata_schema_uri` -
  (Optional)
  Points to a YAML file stored on Google Cloud Storage describing additional information about the Model, that is specific to it.

* `predict_schemata` -
  (Optional)
  The schemata that describe formats of the Model's predictions and explanations as given and returned via PredictionService.Predict and PredictionService.Explain.
  Structure is [documented below](#nested_predict_schemata).

* `pipeline_job` -
  (Optional)
  This field is populated if the model is produced by a pipeline job.

* `container_spec` -
  (Optional)
  The specification of the container that is to be used when deploying this Model.
  Structure is [documented below](#nested_container_spec).

* `artifact_uri` -
  (Optional)
  The path to the directory containing the Model artifact and any of its supporting files.

* `display_name` -
  (Optional)
  The display name of the Model. The name can be up to 128 characters long and can consist of any UTF-8 characters.

* `version_aliases` -
  (Optional)
  user provided version aliases so that a model version can be referenced via alias.

* `labels` -
  (Optional)
  The labels with user-defined metadata to organize your Models.
  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `encryption_spec` -
  (Optional)
  Customer-managed encryption key spec for a MetadataStore. If set, this MetadataStore and all sub-resources of this MetadataStore will be secured by this key.
  Structure is [documented below](#nested_encryption_spec).

* `metadata` -
  (Optional)
  An additional information about the Index
  Structure is [documented below](#nested_metadata).

* `source_model` -
  (Optional)
  The resource name of the Model to copy. That Model must be in the same Project

* `model` -
  (Optional)
  The Model to create.

* `model_id` -
  (Optional)
  Copy sourceModel into a new Model with this ID. The ID will become the final component of the model resource name.

* `region` -
  (Optional)
  The region of the Model. eg us-central1

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


<a name="nested_predict_schemata"></a>The `predict_schemata` block supports:

* `instance_schema_uri` -
  (Optional)
  Points to a YAML file stored on Google Cloud Storage describing the format of a single instance, which are used in PredictRequest.instances, ExplainRequest.instances and BatchPredictionJob.input_config.

* `parameters_schema_uri` -
  (Optional)
  Points to a YAML file stored on Google Cloud Storage describing the parameters of prediction and explanation via PredictRequest.parameters, ExplainRequest.parameters and BatchPredictionJob.model_parameters.

* `prediction_schema_uri` -
  (Optional)
  Points to a YAML file stored on Google Cloud Storage describing the format of a single prediction produced by this Model, which are returned via PredictResponse.predictions, ExplainResponse.explanations, and BatchPredictionJob.output_config.

<a name="nested_container_spec"></a>The `container_spec` block supports:

* `image_uri` -
  (Required)
  URI of the Docker image to be used as the custom container for serving predictions.

* `command` -
  (Optional)
  Specifies the command that runs when the container starts. This overrides the container's ENTRYPOINT.

* `args` -
  (Optional)
  Specifies arguments for the command that runs when the container starts.

* `env` -
  (Optional)
  List of environment variables to set in the container.
  Structure is [documented below](#nested_env).

* `ports` -
  (Optional)
  List of ports to expose from the container.
  Structure is [documented below](#nested_ports).

* `predict_route` -
  (Optional)
  HTTP path on the container to send prediction requests to.

* `health_route` -
  (Optional)
  HTTP path on the container to send health checks to.

* `grpc_ports` -
  (Optional)
  List of ports to expose from the container.
  Structure is [documented below](#nested_grpc_ports).

* `deployment_timeout` -
  (Optional)
  Deployment timeout. Limit for deployment timeout is 2 hours.

* `shared_memory_size_mb` -
  (Optional)
  The amount of the VM memory to reserve as the shared memory for the model in megabytes.

* `startup_probe` -
  (Optional)
  Specification for Kubernetes startup probe.
  Structure is [documented below](#nested_startup_probe).

* `health_probe` -
  (Optional)
  Specification for Kubernetes readiness probe.
  Structure is [documented below](#nested_health_probe).


<a name="nested_env"></a>The `env` block supports:

* `name` -
  (Required)
  name of the environment variable. Must be a valid C identifier.

* `value` -
  (Required)
  Variables that reference a $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables.

<a name="nested_ports"></a>The `ports` block supports:

* `container_port` -
  (Required)
  The number of the port to expose on the pod's IP address. Must be a valid port number, between 1 and 65535 inclusive.

<a name="nested_grpc_ports"></a>The `grpc_ports` block supports:

* `container_port` -
  (Required)
  The number of the port to expose on the pod's IP address. Must be a valid port number, between 1 and 65535 inclusive.

<a name="nested_startup_probe"></a>The `startup_probe` block supports:

* `period_seconds` -
  (Optional)
  How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Must be less than timeoutSeconds.

* `timeout_seconds` -
  (Optional)
  Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Must be greater or equal to periodSeconds.

* `exec` -
  (Optional)
  Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Must be greater or equal to periodSeconds.
  Structure is [documented below](#nested_exec).


<a name="nested_exec"></a>The `exec` block supports:

* `command` -
  (Optional)
  Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem.

<a name="nested_health_probe"></a>The `health_probe` block supports:

* `period_seconds` -
  (Optional)
  How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Must be less than timeoutSeconds.

* `timeout_seconds` -
  (Optional)
  Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Must be greater or equal to periodSeconds.

* `exec` -
  (Optional)
  Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Must be greater or equal to periodSeconds.
  Structure is [documented below](#nested_exec).


<a name="nested_exec"></a>The `exec` block supports:

* `command` -
  (Optional)
  Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem.

<a name="nested_encryption_spec"></a>The `encryption_spec` block supports:

* `kms_key_name` -
  (Optional)
  Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource.
  Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the resource is created.

<a name="nested_metadata"></a>The `metadata` block supports:

* `contents_delta_uri` -
  (Required)
  Allows inserting, updating  or deleting the contents of the Matching Engine Index.
  The string must be a valid Cloud Storage directory path. If this
  field is set when calling IndexService.UpdateIndex, then no other
  Index field can be also updated as part of the same call.
  The expected structure and format of the files this URI points to is
  described at https://cloud.google.com/vertex-ai/docs/matching-engine/using-matching-engine#input-data-format

* `is_complete_overwrite` -
  (Optional)
  If this field is set together with contentsDeltaUri when calling IndexService.UpdateIndex,
  then existing content of the Index will be replaced by the data from the contentsDeltaUri.

* `config` -
  (Optional)
  The configuration of the Matching Engine Index.
  Structure is [documented below](#nested_config).


<a name="nested_config"></a>The `config` block supports:

* `dimensions` -
  (Required)
  The number of dimensions of the input vectors.

* `approximate_neighbors_count` -
  (Optional)
  The default number of neighbors to find via approximate search before exact reordering is
  performed. Exact reordering is a procedure where results returned by an
  approximate search algorithm are reordered via a more expensive distance computation.
  Required if tree-AH algorithm is used.

* `shard_size` -
  (Optional)
  Index data is split into equal parts to be processed. These are called "shards".
  The shard size must be specified when creating an index. The value must be one of the followings:
  * SHARD_SIZE_SMALL: Small (2GB)
  * SHARD_SIZE_MEDIUM: Medium (20GB)
  * SHARD_SIZE_LARGE: Large (50GB)

* `distance_measure_type` -
  (Optional)
  The distance measure used in nearest neighbor search. The value must be one of the followings:
  * SQUARED_L2_DISTANCE: Euclidean (L_2) Distance
  * L1_DISTANCE: Manhattan (L_1) Distance
  * COSINE_DISTANCE: Cosine Distance. Defined as 1 - cosine similarity.
  * DOT_PRODUCT_DISTANCE: Dot Product Distance. Defined as a negative of the dot product

* `feature_norm_type` -
  (Optional)
  Type of normalization to be carried out on each vector. The value must be one of the followings:
  * UNIT_L2_NORM: Unit L2 normalization type
  * NONE: No normalization type is specified.

* `algorithm_config` -
  (Optional)
  The configuration with regard to the algorithms used for efficient search.
  Structure is [documented below](#nested_algorithm_config).


<a name="nested_algorithm_config"></a>The `algorithm_config` block supports:

* `tree_ah_config` -
  (Optional)
  Configuration options for using the tree-AH algorithm (Shallow tree + Asymmetric Hashing).
  Please refer to this paper for more details: https://arxiv.org/abs/1908.10396
  Structure is [documented below](#nested_tree_ah_config).

* `brute_force_config` -
  (Optional)
  Configuration options for using brute force search, which simply implements the
  standard linear search in the database for each query.


<a name="nested_tree_ah_config"></a>The `tree_ah_config` block supports:

* `leaf_node_embedding_count` -
  (Optional)
  Number of embeddings on each leaf node. The default value is 1000 if not set.

* `leaf_nodes_to_search_percent` -
  (Optional)
  The default percentage of leaf nodes that any query may be searched. Must be in
  range 1-100, inclusive. The default value is 10 (means 10%) if not set.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `{{name}}`

* `name` -
  The name of the Model. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.

* `version_id` -
  The version ID of the Model.

* `version_create_time` -
  The timestamp of when this version was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.

* `version_update_time` -
  The timestamp of when this version was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.

* `version_description` -
  The description of this version

* `supported_export_formats` -
  The formats in which this Model may be exported. If empty, this Model is not available for export.
  Structure is [documented below](#nested_supported_export_formats).

* `trainer_pipeline` -
  The resource name of the TrainingPipeline that uploaded this Model, if any.

* `create_time` -
  The timestamp of when the Model was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.

* `update_time` -
  The timestamp of when the MetadataStore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.

* `etag` -
  Used to perform consistent read-modify-write updates.

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.


<a name="nested_supported_export_formats"></a>The `supported_export_formats` block contains:

* `id` -
  (Output)
  The ID of the export format.

* `exportable_content` -
  (Optional)
  The content of this Model that may be exported.
  Possible values are: `:ARTIFACT`, `:IMAGE`.

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import

This resource does not support import.

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
