---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Dialogflow"
page_title: "Google: google_dialogflow_conversation_profile"
description: |-
  Defines the services to connect to incoming Dialogflow conversations.
---

# google\_dialogflow\_conversation\_profile

Defines the services to connect to incoming Dialogflow conversations.


To get more information about ConversationProfile, see:

* [API documentation](https://cloud.google.com/dialogflow/es/docs/reference/rest/v2/projects.conversationProfiles)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/dialogflow/docs/)

## Example Usage - Dialogflow Conversation Profile Basic


```hcl
resource "google_dialogflow_agent" "basic_agent" {
  display_name = "example_agent"
  default_language_code = "en-us"
  time_zone = "America/New_York"
}

resource "google_dialogflow_conversation_profile" "basic_conversation_profile" {
  depends_on    = [google_dialogflow_agent.basic_agent]
  display_name  = "basic-conversation-profile"
  language_code = "en-US"
  automated_agent_config {
    agent = "projects/${google_dialogflow_agent.basic_agent.id}/agent/environments/draft"
  }

  human_agent_assistant_config {
    message_analysis_config {
        enable_entity_extraction  = true
        enable_sentiment_analysis = true
    }
  }
}
```

## Argument Reference

The following arguments are supported:


* `display_name` -
  (Required)
  Human readable name for this profile. Max length 1024 bytes.


- - -


* `automated_agent_config` -
  (Optional)
  Configuration for an automated agent to use with this profile.
  Structure is [documented below](#nested_automated_agent_config).

* `human_agent_assistant_config` -
  (Optional)
  Configuration for agent assistance to use with this profile.
  Structure is [documented below](#nested_human_agent_assistant_config).

* `human_agent_handoff_config` -
  (Optional)
  Configuration for connecting to a live agent.
  Currently, this feature is not general available, please contact Google to get access.
  Structure is [documented below](#nested_human_agent_handoff_config).

* `notification_config` -
  (Optional)
  Configuration for publishing conversation lifecycle events.
  Structure is [documented below](#nested_notification_config).

* `logging_config` -
  (Optional)
  Configuration for logging conversation lifecycle events.
  Structure is [documented below](#nested_logging_config).

* `new_message_event_notification_config` -
  (Optional)
  Configuration for publishing new message events. Event will be sent in format of ConversationEvent
  Structure is [documented below](#nested_new_message_event_notification_config).

* `stt_config` -
  (Optional)
  Settings for speech transcription.
  Structure is [documented below](#nested_stt_config).

* `language_code` -
  (Optional)
  Language code for the conversation profile. If not specified, the language is en-US. Language at ConversationProfile should be set for all non en-US languages. This should be a BCP-47 language tag. Example: "en-US".

* `time_zone` -
  (Optional)
  The time zone of this conversational profile from the time zone database, e.g., America/New_York, Europe/Paris. Defaults to America/New_York.

* `security_settings` -
  (Optional)
  Name of the CX SecuritySettings reference for the agent. Format: projects/<Project ID>/locations/<Location ID>/securitySettings/<Security Settings ID>.
  - !ruby/object:Api::Type::String
    name: "uri"
    required: true
    description: |
      The fulfillment URI for receiving POST requests. It must use https protocol.
  - !ruby/object:Api::Type::String
    name: "username"
    description: |
      The user name for HTTP Basic authentication.
  - !ruby/object:Api::Type::String
    name: "password"
    description: |
      The password for HTTP Basic authentication.
  - !ruby/object:Api::Type::KeyValuePairs
    name: "requestHeaders"
    description: |
      The HTTP request headers to send together with fulfillment requests.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


<a name="nested_automated_agent_config"></a>The `automated_agent_config` block supports:

* `agent` -
  (Required)
  ID of the Dialogflow agent environment to use.
  This project needs to either be the same project as the conversation or you need to grant service-<Conversation Project Number>@gcp-sa-dialogflow.iam.gserviceaccount.com the Dialogflow API Service Agent role in this project.
  For ES agents, use format: projects/<Project ID>/locations/<Location ID>/agent/environments/<Environment ID or '-'>. If environment is not specified, the default draft environment is used. 
  For CX agents, use format projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/environments/<Environment ID or '-'>. If environment is not specified, the default draft environment is used.

<a name="nested_human_agent_assistant_config"></a>The `human_agent_assistant_config` block supports:

* `notification_config` -
  (Optional)
  Pub/Sub topic on which to publish new agent assistant events.
  Structure is [documented below](#nested_notification_config).

* `human_agent_suggestion_config` -
  (Optional)
  Configuration for agent assistance of human agent participant.
  Structure is [documented below](#nested_human_agent_suggestion_config).

* `end_user_suggestion_config` -
  (Optional)
  Configuration for agent assistance of end user participant.
  Currently, this feature is not general available, please contact Google to get access.
  Structure is [documented below](#nested_end_user_suggestion_config).

* `message_analysis_config` -
  (Optional)
  Configuration for message analysis.
  Structure is [documented below](#nested_message_analysis_config).


<a name="nested_notification_config"></a>The `notification_config` block supports:

* `topic` -
  (Optional)
  Name of the Pub/Sub topic to publish conversation events like CONVERSATION_STARTED as serialized ConversationEvent protos.
  For telephony integration to receive notification, make sure either this topic is in the same project as the conversation or you grant service-<Conversation Project Number>@gcp-sa-dialogflow.iam.gserviceaccount.com the Dialogflow Service Agent role in the topic project.
  For chat integration to receive notification, make sure API caller has been granted the Dialogflow Service Agent role for the topic.
  Format: projects/<Project ID>/locations/<Location ID>/topics/<Topic ID>.

* `message_format` -
  (Optional)
  Format of message.
  * PROTO: Pub/Sub message will be serialized proto.
  * JSON: Pub/Sub message will be json.
  Possible values are `PROTO` and `JSON`.

<a name="nested_human_agent_suggestion_config"></a>The `human_agent_suggestion_config` block supports:

* `feature_configs` -
  (Optional)
  Configuration of different suggestion features. One feature can have only one config.
  Structure is [documented below](#nested_feature_configs).

* `group_suggestion_responses` -
  (Optional)
  If groupSuggestionResponses is false, and there are multiple featureConfigs in event based suggestion or StreamingAnalyzeContent, we will try to deliver suggestions to customers as soon as we get new suggestion. Different type of suggestions based on the same context will be in separate Pub/Sub event or StreamingAnalyzeContentResponse.
  If groupSuggestionResponses set to true. All the suggestions to the same participant based on the same context will be grouped into a single Pub/Sub event or StreamingAnalyzeContentResponse


<a name="nested_feature_configs"></a>The `feature_configs` block supports:

* `suggestion_feature` -
  (Optional)
  The suggestion feature.
  Structure is [documented below](#nested_suggestion_feature).

* `enable_event_based_suggestion` -
  (Optional)
  Automatically iterates all participants and tries to compile suggestions.
  Supported features: ARTICLE_SUGGESTION, FAQ, DIALOGFLOW_ASSIST.

* `suggestion_trigger_settings` -
  (Optional)
  Settings of suggestion trigger.
  Currently, only ARTICLE_SUGGESTION and FAQ will use this field.
  Structure is [documented below](#nested_suggestion_trigger_settings).

* `query_config` -
  (Optional)
  Configs of query.
  Structure is [documented below](#nested_query_config).

* `conversation_model_config` -
  (Optional)
  Configs of custom conversation model.
  Structure is [documented below](#nested_conversation_model_config).

* `conversation_process_config` -
  (Optional)
  Configs for processing conversation.
  Structure is [documented below](#nested_conversation_process_config).


<a name="nested_suggestion_feature"></a>The `suggestion_feature` block supports:

* `type` -
  (Optional)
  Type of Human Agent Assistant API feature to request.
  * ARTICLE_SUGGESTION: Run article suggestion model for chat.
  * FAQ: Run FAQ model for chat.
  * SMART_REPLY: Run smart reply model for chat.
  Possible values are `ARTICLE_SUGGESTION`, `FAQ`, and `SMART_REPLY`.

<a name="nested_suggestion_trigger_settings"></a>The `suggestion_trigger_settings` block supports:

* `no_smalltalk` -
  (Optional)
  Do not trigger if last utterance is small talk.

* `only_end_user` -
  (Optional)
  Only trigger suggestion if participant role of last utterance is END_USER.

<a name="nested_query_config"></a>The `query_config` block supports:

* `max_results` -
  (Optional)
  Maximum number of results to return. Currently, if unset, defaults to 10. And the max number is 20.

* `confidence_threshold` -
  (Optional)
  Confidence threshold of query result.
  Agent Assist gives each suggestion a score in the range [0.0, 1.0], based on the relevance between the suggestion and the current conversation context. A score of 0.0 has no relevance, while a score of 1.0 has high relevance. Only suggestions with a score greater than or equal to the value of this field are included in the results.
  For a baseline model (the default), the recommended value is in the range [0.05, 0.1].
  For a custom model, there is no recommended value. Tune this value by starting from a very low value and slowly increasing until you have desired results.
  If this field is not set, it defaults to 0.0, which means that all suggestions are returned.
  Supported features: ARTICLE_SUGGESTION, FAQ, SMART_REPLY, SMART_COMPOSE.

* `context_filter_settings` -
  (Optional)
  Determines how recent conversation context is filtered when generating suggestions. If unspecified, no messages will be dropped.
  Structure is [documented below](#nested_context_filter_settings).

* `knowledge_base_query_source` -
  (Optional)
  Query from knowledgebase. It is used by: ARTICLE_SUGGESTION, FAQ.
  Structure is [documented below](#nested_knowledge_base_query_source).

* `document_query_source` -
  (Optional)
  Query from knowledge base document. It is used by: SMART_REPLY, SMART_COMPOSE.
  Structure is [documented below](#nested_document_query_source).

* `dialogflow_query_source` -
  (Optional)
  Query from Dialogflow agent. It is used by DIALOGFLOW_ASSIST.
  Structure is [documented below](#nested_dialogflow_query_source).


<a name="nested_context_filter_settings"></a>The `context_filter_settings` block supports:

* `drop_handoff_messages` -
  (Optional)
  If set to true, the last message from virtual agent (hand off message) and the message before it (trigger message of hand off) are dropped.

* `drop_virtual_agent_messages` -
  (Optional)
  If set to true, all messages from virtual agent are dropped.

* `drop_ivr_messages` -
  (Optional)
  If set to true, all messages from ivr stage are dropped.

<a name="nested_knowledge_base_query_source"></a>The `knowledge_base_query_source` block supports:

* `knowledge_bases` -
  (Optional)
  Knowledge bases to query. Format: projects/<Project ID>/locations/<Location ID>/knowledgeBases/<Knowledge Base ID>. Currently, at most 5 knowledge bases are supported.

<a name="nested_document_query_source"></a>The `document_query_source` block supports:

* `documents` -
  (Optional)
  Knowledge documents to query from. Format: projects/<Project ID>/locations/<Location ID>/knowledgeBases/<KnowledgeBase ID>/documents/<Document ID>. Currently, at most 5 documents are supported.

<a name="nested_dialogflow_query_source"></a>The `dialogflow_query_source` block supports:

* `agent` -
  (Optional)
  The name of a Dialogflow virtual agent used for end user side intent detection and suggestion. Format: projects/<Project Number/ ID>/locations/<Location ID>/agent. When multiple agents are allowed in the same Dialogflow project.

<a name="nested_conversation_model_config"></a>The `conversation_model_config` block supports:

* `model` -
  (Optional)
  Conversation model resource name. Format: projects/<Project ID>/conversationModels/<Model ID>.

<a name="nested_conversation_process_config"></a>The `conversation_process_config` block supports:

* `recent_sentences_count` -
  (Optional)
  Number of recent non-small-talk sentences to use as context for article and FAQ suggestion.

<a name="nested_end_user_suggestion_config"></a>The `end_user_suggestion_config` block supports:

* `feature_configs` -
  (Optional)
  Configuration of different suggestion features. One feature can have only one config.
  Structure is [documented below](#nested_feature_configs).

* `group_suggestion_responses` -
  (Optional)
  If groupSuggestionResponses is false, and there are multiple featureConfigs in event based suggestion or StreamingAnalyzeContent, we will try to deliver suggestions to customers as soon as we get new suggestion. Different type of suggestions based on the same context will be in separate Pub/Sub event or StreamingAnalyzeContentResponse.
  If groupSuggestionResponses set to true. All the suggestions to the same participant based on the same context will be grouped into a single Pub/Sub event or StreamingAnalyzeContentResponse


<a name="nested_feature_configs"></a>The `feature_configs` block supports:

* `suggestion_feature` -
  (Optional)
  The suggestion feature.
  Structure is [documented below](#nested_suggestion_feature).

* `enable_event_based_suggestion` -
  (Optional)
  Automatically iterates all participants and tries to compile suggestions.
  Supported features: ARTICLE_SUGGESTION, FAQ, DIALOGFLOW_ASSIST.

* `suggestion_trigger_settings` -
  (Optional)
  Settings of suggestion trigger.
  Currently, only ARTICLE_SUGGESTION and FAQ will use this field.
  Structure is [documented below](#nested_suggestion_trigger_settings).

* `query_config` -
  (Optional)
  Configs of query.
  Structure is [documented below](#nested_query_config).

* `conversation_model_config` -
  (Optional)
  Configs of custom conversation model.
  Structure is [documented below](#nested_conversation_model_config).

* `conversation_process_config` -
  (Optional)
  Configs for processing conversation.
  Structure is [documented below](#nested_conversation_process_config).


<a name="nested_suggestion_feature"></a>The `suggestion_feature` block supports:

* `type` -
  (Optional)
  Type of Human Agent Assistant API feature to request.
  * ARTICLE_SUGGESTION: Run article suggestion model for chat.
  * FAQ: Run FAQ model for chat.
  * SMART_REPLY: Run smart reply model for chat.
  Possible values are `ARTICLE_SUGGESTION`, `FAQ`, and `SMART_REPLY`.

<a name="nested_suggestion_trigger_settings"></a>The `suggestion_trigger_settings` block supports:

* `no_smalltalk` -
  (Optional)
  Do not trigger if last utterance is small talk.

* `only_end_user` -
  (Optional)
  Only trigger suggestion if participant role of last utterance is END_USER.

<a name="nested_query_config"></a>The `query_config` block supports:

* `max_results` -
  (Optional)
  Maximum number of results to return. Currently, if unset, defaults to 10. And the max number is 20.

* `confidence_threshold` -
  (Optional)
  Confidence threshold of query result.
  Agent Assist gives each suggestion a score in the range [0.0, 1.0], based on the relevance between the suggestion and the current conversation context. A score of 0.0 has no relevance, while a score of 1.0 has high relevance. Only suggestions with a score greater than or equal to the value of this field are included in the results.
  For a baseline model (the default), the recommended value is in the range [0.05, 0.1].
  For a custom model, there is no recommended value. Tune this value by starting from a very low value and slowly increasing until you have desired results.
  If this field is not set, it defaults to 0.0, which means that all suggestions are returned.
  Supported features: ARTICLE_SUGGESTION, FAQ, SMART_REPLY, SMART_COMPOSE.

* `context_filter_settings` -
  (Optional)
  Determines how recent conversation context is filtered when generating suggestions. If unspecified, no messages will be dropped.
  Structure is [documented below](#nested_context_filter_settings).

* `knowledge_base_query_source` -
  (Optional)
  Query from knowledgebase. It is used by: ARTICLE_SUGGESTION, FAQ.
  Structure is [documented below](#nested_knowledge_base_query_source).

* `document_query_source` -
  (Optional)
  Query from knowledge base document. It is used by: SMART_REPLY, SMART_COMPOSE.
  Structure is [documented below](#nested_document_query_source).

* `dialogflow_query_source` -
  (Optional)
  Query from Dialogflow agent. It is used by DIALOGFLOW_ASSIST.
  Structure is [documented below](#nested_dialogflow_query_source).


<a name="nested_context_filter_settings"></a>The `context_filter_settings` block supports:

* `drop_handoff_messages` -
  (Optional)
  If set to true, the last message from virtual agent (hand off message) and the message before it (trigger message of hand off) are dropped.

* `drop_virtual_agent_messages` -
  (Optional)
  If set to true, all messages from virtual agent are dropped.

* `drop_ivr_messages` -
  (Optional)
  If set to true, all messages from ivr stage are dropped.

<a name="nested_knowledge_base_query_source"></a>The `knowledge_base_query_source` block supports:

* `knowledge_bases` -
  (Optional)
  Knowledge bases to query. Format: projects/<Project ID>/locations/<Location ID>/knowledgeBases/<Knowledge Base ID>. Currently, at most 5 knowledge bases are supported.

<a name="nested_document_query_source"></a>The `document_query_source` block supports:

* `documents` -
  (Optional)
  Knowledge documents to query from. Format: projects/<Project ID>/locations/<Location ID>/knowledgeBases/<KnowledgeBase ID>/documents/<Document ID>. Currently, at most 5 documents are supported.

<a name="nested_dialogflow_query_source"></a>The `dialogflow_query_source` block supports:

* `agent` -
  (Optional)
  The name of a Dialogflow virtual agent used for end user side intent detection and suggestion. Format: projects/<Project Number/ ID>/locations/<Location ID>/agent. When multiple agents are allowed in the same Dialogflow project.

<a name="nested_conversation_model_config"></a>The `conversation_model_config` block supports:

* `model` -
  (Optional)
  Conversation model resource name. Format: projects/<Project ID>/conversationModels/<Model ID>.

<a name="nested_conversation_process_config"></a>The `conversation_process_config` block supports:

* `recent_sentences_count` -
  (Optional)
  Number of recent non-small-talk sentences to use as context for article and FAQ suggestion.

<a name="nested_message_analysis_config"></a>The `message_analysis_config` block supports:

* `enable_entity_extraction` -
  (Optional)
  Enable entity extraction in conversation messages on agent assist stage. If unspecified, defaults to false.
  Currently, this feature is not general available, please contact Google to get access.

* `enable_sentiment_analysis` -
  (Optional)
  Enable sentiment analysis in conversation messages on agent assist stage. If unspecified, defaults to false. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral: https://cloud.google.com/natural-language/docs/basics#sentimentAnalysis For Participants.StreamingAnalyzeContent method, result will be in StreamingAnalyzeContentResponse.message.SentimentAnalysisResult. For Participants.AnalyzeContent method, result will be in AnalyzeContentResponse.message.SentimentAnalysisResult For Conversations.ListMessages method, result will be in ListMessagesResponse.messages.SentimentAnalysisResult If Pub/Sub notification is configured, result will be in ConversationEvent.new_message_payload.SentimentAnalysisResult.

<a name="nested_human_agent_handoff_config"></a>The `human_agent_handoff_config` block supports:

* `live_person_config` -
  (Optional)
  Uses LivePerson (https://www.liveperson.com).
  Structure is [documented below](#nested_live_person_config).

* `salesforce_live_agent_config` -
  (Optional)
  Uses Salesforce Live Agent.
  Structure is [documented below](#nested_salesforce_live_agent_config).


<a name="nested_live_person_config"></a>The `live_person_config` block supports:

* `account_number` -
  (Optional)
  Account number of the LivePerson account to connect. This is the account number you input at the login page.

<a name="nested_salesforce_live_agent_config"></a>The `salesforce_live_agent_config` block supports:

* `organization_id` -
  (Optional)
  The organization ID of the Salesforce account.

* `deployment_id` -
  (Optional)
  Live Agent deployment ID.

* `button_id` -
  (Optional)
  Live Agent chat button ID.

* `endpoint_domain` -
  (Optional)
  Domain of the Live Agent endpoint for this agent. You can find the endpoint URL in the Live Agent settings page. For example if URL has the form https://d.la4-c2-phx.salesforceliveagent.com/..., you should fill in d.la4-c2-phx.salesforceliveagent.com.

<a name="nested_notification_config"></a>The `notification_config` block supports:

* `topic` -
  (Optional)
  Name of the Pub/Sub topic to publish conversation events like CONVERSATION_STARTED as serialized ConversationEvent protos.
  For telephony integration to receive notification, make sure either this topic is in the same project as the conversation or you grant service-<Conversation Project Number>@gcp-sa-dialogflow.iam.gserviceaccount.com the Dialogflow Service Agent role in the topic project.
  For chat integration to receive notification, make sure API caller has been granted the Dialogflow Service Agent role for the topic.
  Format: projects/<Project ID>/locations/<Location ID>/topics/<Topic ID>.

* `message_format` -
  (Optional)
  Format of message.
  * PROTO: Pub/Sub message will be serialized proto.
  * JSON: Pub/Sub message will be json.
  Possible values are `PROTO` and `JSON`.

<a name="nested_logging_config"></a>The `logging_config` block supports:

* `enable_stackdriver_logging` -
  (Optional)
  Whether to log conversation events like CONVERSATION_STARTED to Stackdriver in the conversation project as JSON format ConversationEvent protos.

<a name="nested_new_message_event_notification_config"></a>The `new_message_event_notification_config` block supports:

* `topic` -
  (Optional)
  Name of the Pub/Sub topic to publish conversation events like CONVERSATION_STARTED as serialized ConversationEvent protos.
  For telephony integration to receive notification, make sure either this topic is in the same project as the conversation or you grant service-<Conversation Project Number>@gcp-sa-dialogflow.iam.gserviceaccount.com the Dialogflow Service Agent role in the topic project.
  For chat integration to receive notification, make sure API caller has been granted the Dialogflow Service Agent role for the topic.
  Format: projects/<Project ID>/locations/<Location ID>/topics/<Topic ID>.

* `message_format` -
  (Optional)
  Format of message.
  * PROTO: Pub/Sub message will be serialized proto.
  * JSON: Pub/Sub message will be json.
  Possible values are `PROTO` and `JSON`.

<a name="nested_stt_config"></a>The `stt_config` block supports:

* `speech_model_variant` -
  (Optional)
  The speech model used in speech to text.
  * USE_BEST_AVAILABLE: Use the best available variant of the [Speech model][InputAudioConfig.model] that the caller is eligible for.
  * USE_STANDARD: Use standard model variant even if an enhanced model is available.
  * USE_ENHANCED: Use an enhanced model variant. If an enhanced variant does not exist for the given model and request language, Dialogflow falls back to the standard variant.
  Possible values are `USE_BEST_AVAILABLE`, `USE_STANDARD`, and `USE_ENHANCED`.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `{{name}}`

* `name` -
  The unique identifier of this conversation profile. 
  Format: projects/<Project ID>/locations/<Location ID>/conversationProfiles/<Conversation Profile ID>.

* `create_time` -
  Create time of the conversation profile.

* `update_time` -
  Update time of the conversation profile.


## Timeouts

This resource provides the following
[Timeouts](/docs/configuration/resources.html#timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


ConversationProfile can be imported using any of these accepted formats:

```
$ terraform import google_dialogflow_conversation_profile.default {{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://www.terraform.io/docs/providers/google/guides/provider_reference.html#user_project_override).
