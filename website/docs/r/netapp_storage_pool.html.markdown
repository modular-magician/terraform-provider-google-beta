---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Netapp"
description: |-
  StoragePool is a container for volumes with a service level and capacity.
---

# google\_netapp\_storage\_pool

StoragePool is a container for volumes with a service level and capacity.Volumes can be created in a pool of sufficient available capacity. StoragePool capacity is what you are billed for.


To get more information about storagePool, see:

* [API documentation](https://cloud.google.com/netapp/volumes/docs/reference/rest/v1/projects.locations.storagePools)
* How-to Guides
    * [QUICKSTART_TITLE](https://cloud.google.com/netapp/volumes/docs/reference/rest/v1/projects.locations.storagePools)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=Storage_pool_create&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Storage Pool Create


```hcl
resource "google_compute_network" "peering_network" {
  name = "peering-network"
}

# Create an IP address
resource "google_compute_global_address" "private_ip_alloc" {
  name          = "private-ip-alloc"
  purpose       = "VPC_PEERING"
  address_type  = "INTERNAL"
  prefix_length = 16
  network       = google_compute_network.peering_network.id
}

# Create a private connection
resource "google_service_networking_connection" "default" {
  network                 = google_compute_network.peering_network.id
  service                 = "netapp.servicenetworking.goog"
  reserved_peering_ranges = [google_compute_global_address.private_ip_alloc.name]
}

resource "google_netapp_storage_pool" "testPools" {
  storage_pool_id = "testpool1"
  location = "us-central1"
  service_level = "PREMIUM"
  capacity_gib = "2048"
  network = google_compute_network.peering_network.id
  active_directory      = ""
  description           = ""
  global_access_allowed = false
  kms_config            = ""
  labels                = {}
  ldap_enabled          = false
  psa_range             = ""

}
```

## Argument Reference

The following arguments are supported:


* `location` -
  (Required)
  LOCATION_DESCRIPTION

* `storage_pool_id` -
  (Required)
  The unique name of the storage pool `[_a-zA-Z0-9][-_.a-zA-Z0-9]*`.


- - -


* `service_level` -
  (Optional)
  Service level of the storage pool
  Possible values are: `PREMIUM`, `EXTREME`, `STANDARD`.

* `capacity_gib` -
  (Optional)
  Capacity in GIB of the pool

* `description` -
  (Optional)
  Description of the storage pool

* `labels` -
  (Optional)
  Labels as key value pairs.An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.

* `network` -
  (Optional)
  VPC Network name. Format: projects/{project}/global/networks/{network}

* `active_directory` -
  (Optional)
  Specifies the Active Directory to be used for creating a SMB volume.

* `kms_config` -
  (Optional)
  Specifies the KMS config to be used for volume encryption.

* `ldap_enabled` -
  (Optional)
  Flag indicating if the pool is NFS LDAP enabled or not.

* `psa_range` -
  (Optional)
  Name of the Private Service Access allocated range. If not provided, any available range will be chosen.

* `global_access_allowed` -
  (Optional)
  Allows SO pool to access AD or DNS server from other regions.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/storagePools/{{storage_pool_id}}`

* `name` -
  Name of the storage pool

* `volume_capacity_gib` -
  Allocated size of all volumes in GIB in the storage pool

* `volume_count` -
  Volume count of the storage pool

* `state` -
  State of the storage pool

* `state_details` -
  State details of the storage pool

* `create_time` -
  Create time of the storage pool

* `encryption_type` -
  Specifies the current pool encryption key source.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


storagePool can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/storagePools/{{name}}`
* `{{project}}/{{location}}/{{name}}`
* `{{location}}/{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import storagePool using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/storagePools/{{name}}"
  to = google_netapp_storage_pool.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), storagePool can be imported using one of the formats above. For example:

```
$ terraform import google_netapp_storage_pool.default projects/{{project}}/locations/{{location}}/storagePools/{{name}}
$ terraform import google_netapp_storage_pool.default {{project}}/{{location}}/{{name}}
$ terraform import google_netapp_storage_pool.default {{location}}/{{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
