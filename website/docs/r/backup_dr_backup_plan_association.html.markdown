---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Backup and DR Service"
description: |-
  A Backup and DR BackupPlanAssociation.
---

# google_backup_dr_backup_plan_association

A Backup and DR BackupPlanAssociation.

~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/guides/provider_versions.html) for more details on beta resources.

To get more information about BackupPlanAssociation, see:

* [API documentation](https://cloud.google.com/backup-disaster-recovery/docs/reference/rest)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/backup-disaster-recovery/docs)

## Example Usage - Backup Dr Bpa


```hcl
resource "google_backup_dr_backup_vault" "bv1" {
    provider = google-beta
    project       = "<%= ctx[:vars]['project'] %>"
    location = "us-central1"
    backup_vault_id    = "<%= ctx[:vars]['backup_vault_name'] %>"
    description = "This is a second backup vault built by Terraform."
    backup_minimum_enforced_retention_duration = "100000s"
    labels = {
      foo = "bar1"
      bar = "baz1"
    }
    annotations = {
      annotations1 = "bar1"
      annotations2 = "baz1"
    }
    force_update = "true"
    force_delete = "true"
    allow_missing = "true" 
}
resource "google_backup_dr_backup_plan" "bp1" {
  provider = google-beta
  location = "us-central1"
  name          = "bp1"
  resource_type = "compute.googleapis.com/Instance"
  backup_vault  = [ google_backup_dr_backup_vault.bv1.name ]
  backup_rules {
      rule_id = "rule-1"
      backup_retention_days = "10"
      standard_schedule {
        recurrence_type = "HOURLY
        hourly_frequency = "8"
        time_zone = UTC"
        backup_window {
          start_hour_of_day = "0"
          end_hour_of_day   = "24"
        }
      }
  }
}
resource "google_backup_dr_backup_plan_association" "bpa1" {
  provider = google-beta
  location = "us-central1"
  name          = "bpa1"
  resource      = "projects/my-project/locations/us-central1/instances/{instance_id}"
  backup_plan  = [ google_backup_dr_backup_plan.bp1.name ]
}
```

## Argument Reference

The following arguments are supported:


* `resource` -
  (Required)
  The resource for which BPA needs to be created

* `backup_plan` -
  (Required)
  The BP with which resource needs to be created

* `location` -
  (Required)
  The location for the backupplan association

* `backup_plan_association_id` -
  (Required)
  The id of backupplan association


- - -


* `rules_config_info` -
  (Optional)
  Message for rules config info
  Structure is [documented below](#nested_rules_config_info).

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


<a name="nested_rules_config_info"></a>The `rules_config_info` block supports:

* `rule_id` -
  (Output)
  Backup Rule id fetched from backup plan.

* `last_backup_state` -
  (Optional)
  State of last backup taken.
  Default value is `:LAST_BACKUP_STATE_UNSPECIFIED`.
  Possible values are: `:LAST_BACKUP_STATE_UNSPECIFIED`, `:FIRST_BACKUP_PENDING`, `:PERMISSION_DENIED`, `:SUCCEEDED`, `:FAILED`.

* `last_backup_error` -
  (Output)
  google.rpc.Status object to store the last backup error
  Structure is [documented below](#nested_last_backup_error).


<a name="nested_last_backup_error"></a>The `last_backup_error` block contains:

* `code` -
  (Optional)
  The status code, which should be an enum value of [google.rpc.Code]

* `message` -
  (Optional)
  A developer-facing error message, which should be in English.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/backupPlanAssociations/{{backup_plan_association_id}}`

* `name` -
  The name of backup plan association resource created

* `resource_type` -
  The resource type of workload on which backupplan is applied

* `create_time` -
  The time when the instance was created

* `update_time` -
  The time when the instance was updated.

* `data_source` -
  Resource name of data source which will be used as storage location for backups taken

* `last_successful_backup_consistency_time` -
  The point in time when the last successful backup was captured from the source


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 60 minutes.
- `delete` - Default is 60 minutes.

## Import


BackupPlanAssociation can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/backupPlanAssociations/{{name}}`
* `{{project}}/{{location}}/{{name}}`
* `{{location}}/{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import BackupPlanAssociation using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/backupPlanAssociations/{{name}}"
  to = google_backup_dr_backup_plan_association.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), BackupPlanAssociation can be imported using one of the formats above. For example:

```
$ terraform import google_backup_dr_backup_plan_association.default projects/{{project}}/locations/{{location}}/backupPlanAssociations/{{name}}
$ terraform import google_backup_dr_backup_plan_association.default {{project}}/{{location}}/{{name}}
$ terraform import google_backup_dr_backup_plan_association.default {{location}}/{{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
