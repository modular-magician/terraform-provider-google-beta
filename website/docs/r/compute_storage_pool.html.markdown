---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Compute Engine"
description: |-
  Storage pools improve performance for volumes of the CVS service type.
---

# google_compute_storage_pool

Storage pools improve performance for volumes of the CVS service type. A storage pool
acts as a container for up to 50 volumes; all volumes in the pool share the capacity
and performance of that pool.

Each volume of the CVS-Performance service type exists individually. The performance
of a volume of the CVS-Performance service type is determined by its size and its
service level, which can impose a performance limitation for very small volumes.
To improve performance for small volume performance, the CVS service type manages
volumes with storage pools.

A storage pool aggregates capacity and performance. Volumes are created within the
storage pool and can use the capacity and performance of that pool. All volumes in
the same storage pool share the performance capability of the pool. A volume can use
the full performance capacity of its pool. If volumes need performance isolation from
each other, they must be created in different pools.

Storage pools support two levels of availability: zonal and zone-redundant.
Redundancy is set when you create a storage pool and can either be zonal (high
availability within a single zone) or zone-redundant (high availability across two
zones). For zone-redundant volumes, all volumes are run in a primary zone and fail
over to the secondary zone in the case of zone failure or because of a user-initiated
cross-zone move. Primary and secondary zones are chosen at the time of pool creation.


To get more information about StoragePool, see:

* [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/storagePools)
* How-to Guides
    * [Create a storage pool](https://cloud.google.com/compute/docs/disks/create-storage-pools)

## Example Usage - Compute Storage Pool Basic


```hcl
resource "google_compute_storage_pool" "default" {
  name  = "test-storage-pool"
  zone  = "us-central1-a"
  storage_pool_type = "hyperdisk-throughput"
  pool_provisioned_capacity_gb = 10240
  pool_provisioned_throughput = 100
}
```
## Example Usage - Compute Storage Pool Hyperdisk Balanced


```hcl
resource "google_compute_storage_pool" "default" {
  name  = "test-storage-pool-hyperdisk-balanced"
  zone  = "us-central1-a"
  storage_pool_type = "hyperdisk-balanced"
  capacity_provisioning_type = "ADVANCED"
  pool_provisioned_capacity_gb = 10240
  pool_provisioned_iops = 10000
  pool_provisioned_throughput = 1024
}
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  Name of the resource. Provided by the client when the resource is
  created. The name must be 1-63 characters long, and comply with
  RFC1035. Specifically, the name must be 1-63 characters long and match
  the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
  first character must be a lowercase letter, and all following
  characters must be a dash, lowercase letter, or digit, except the last
  character, which cannot be a dash.

* `pool_provisioned_capacity_gb` -
  (Required)
  Size, in GiB, of the storage pool. Choose between 10,240 and 1,048,576 GiB.

* `pool_provisioned_throughput` -
  (Required)
  Provisioned throughput of the storage pool. For hyperdisk-balanced storage pool type,
  provision between 0 and 10,240, must be a multiple of 1,024 MB/s. For hyperdisk-throughput
  storage pool type, provision between 100 and 180, must be a multiple of 10 MB/s.

* `storage_pool_type` -
  (Required)
  URL of the storage pool type resource describing which storage pool type to use to
  create the storage pool. Provide this when creating the storage pool.


- - -


* `description` -
  (Optional)
  An optional description of this resource. Provide this property when
  you create the resource.

* `pool_provisioned_iops` -
  (Optional)
  Provisioned IOPS of the storage pool. Only relevant if the storage pool type is
  hyperdisk-balanced. Provision between 0 and 40,000, must be a multiple of 10,000.

* `capacity_provisioning_type` -
  (Optional)
  Provisioning type of the byte capacity of the pool.
  Possible values are: `ADVANCED`, `STANDARD`.

* `performance_provisioning_type` -
  (Optional)
  Provisioning type of the performance-related parameters of the pool,
  such as throughput and IOPS.
  Possible values are: `ADVANCED`, `STANDARD`.

* `zone` -
  (Optional)
  A reference to the zone where the storage pool resides.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/zones/{{zone}}/storagePools/{{name}}`

* `storage_pool_id` -
  The unique identifier for the resource. This identifier is defined by the server.

* `creation_timestamp` -
  Creation timestamp in RFC3339 text format.

* `last_resize_timestamp` -
  Timestamp of the last successful resize in RFC3339 text format.

* `disk_count` -
  Number of disks used.

* `pool_used_capacity_bytes` -
  Space used by data stored in disks within the storage pool (in bytes).
  This will reflect the total number of bytes written to the disks in the pool,
  in contrast to the capacity of those disks.

* `pool_user_written_bytes` -
  Amount of data written into the pool, before it is compacted.

* `total_provisioned_disk_capacity_gb` -
  Sum of all the capacity provisioned in disks in this storage pool.
  A disk's provisioned capacity is the same as its total capacity.

* `max_total_provisioned_disk_capacity_gb` -
  Maximum allowed aggregate disk size in gigabytes.

* `pool_used_iops` -
  Sum of all the disks' provisioned IOPS, minus some amount that is allowed
  per disk that is not counted towards pool's IOPS capacity.

* `total_provisioned_disk_iops` -
  Sum of all the disks' provisioned IOPS.

* `pool_used_throughput` -
  Sum of all the disks' provisioned throughput in MB/s.

* `total_provisioned_disk_throughput` -
  Sum of all the disks' provisioned throughput in MB/s, minus
  some amount that is allowed per disk that is not counted
  toward pool's throughput capacity.
* `self_link` - The URI of the created resource.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


StoragePool can be imported using any of these accepted formats:

* `projects/{{project}}/zones/{{zone}}/storagePools/{{name}}`
* `{{project}}/{{zone}}/{{name}}`
* `{{zone}}/{{name}}`
* `{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import StoragePool using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/zones/{{zone}}/storagePools/{{name}}"
  to = google_compute_storage_pool.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), StoragePool can be imported using one of the formats above. For example:

```
$ terraform import google_compute_storage_pool.default projects/{{project}}/zones/{{zone}}/storagePools/{{name}}
$ terraform import google_compute_storage_pool.default {{project}}/{{zone}}/{{name}}
$ terraform import google_compute_storage_pool.default {{zone}}/{{name}}
$ terraform import google_compute_storage_pool.default {{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
