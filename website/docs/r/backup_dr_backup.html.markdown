---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Backup and DR Service"
description: |-
  A Backup object nested under DataSource
---

# google_backup_dr_backup

A Backup object nested under DataSource

~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/guides/provider_versions.html) for more details on beta resources.

To get more information about Backup, see:

* [API documentation](API_REFERENCE_URL)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/backup-disaster-recovery/docs)

## Example Usage - Backup Dr Backup Basic


```hcl
resource "google_backup_dr_backup" "b-test" {
    provider = google-beta
    location = "us-central1"
    backup_vault_id = "bv-test"
    data_source_id = "ds-test"
    backup_id = "b-test"
}
```

## Argument Reference

The following arguments are supported:


* `location` -
  (Required)
  Location of the resource

* `backup_id` -
  (Required)
  Id of the requesting object, Backup

* `backup_vault_id` -
  (Required)
  Name of the Backup Vault associated with Backup

* `data_source_id` -
  (Required)
  Name of the Data Source associated with Backup


- - -


* `labels` -
  (Optional)
  Resource labels to represent user provided metadata.

  **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
  Please refer to the field `effective_labels` for all of the labels present on the resource.

* `enforced_retention_end_time` -
  (Optional)
  The backup can not be deleted before this time.

* `e_tag` -
  (Optional)
  Server specified ETag to prevent updates from overwriting each other.

* `backup_appliance_locks` -
  (Optional)
  The list of BackupLocks taken by the accessor Backup Appliance.
  Structure is [documented below](#nested_backup_appliance_locks).

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


<a name="nested_backup_appliance_locks"></a>The `backup_appliance_locks` block supports:

* `lock_until_time` -
  (Required)
  The time after which this lock is not considered valid and will no longer protect the Backup from deletion.

* `backup_appliance_lock_info` -
  (Optional)
  A nested object resource
  Structure is [documented below](#nested_backup_appliance_lock_info).

* `service_lock_info` -
  (Output)
  A nested object resource
  Structure is [documented below](#nested_service_lock_info).


<a name="nested_backup_appliance_lock_info"></a>The `backup_appliance_lock_info` block supports:

* `backup_appliance_id` -
  (Required)
  The ID of the backup/recovery appliance that created this lock.

* `backup_appliance_name` -
  (Required)
  The name of the backup/recovery appliance that created this lock.

* `lock_reason` -
  (Required)
  The reason for the lock: e.g. MOUNT/RESTORE/BACKUP/etc. The value of this string is only meaningful to the client and it is not interpreted by the BackupVault service.

* `job_name` -
  (Optional)
  The job name on the backup/recovery appliance that created this lock.

* `backup_image` -
  (Optional)
  The image name that depends on this Backup.

* `sla_id` -
  (Optional)
  The SLA on the backup/recovery appliance that owns the lock.

<a name="nested_service_lock_info"></a>The `service_lock_info` block contains:

* `operation` -
  (Output)
  The name of the operation that created this lock. The lock will automatically be released when the operation completes.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/backupVaults/{{backupvault}}/dataSources/{{datasource}}/backups/{{name}}`

* `name` -
  The name of the backup.

* `description` -
  The description of the Backup instance (2048 characters or less).

* `create_time` -
  The time when the instance was created.

* `update_time` -
  The time when the instance was updated.

* `consistency_time` -
  The point in time when this backup was captured from the source.

* `state` -
  The Backup resource instance state.

* `service_locks` -
  The list of BackupLocks taken by the service to prevent the deletion of the backup.
  Structure is [documented below](#nested_service_locks).

* `compute_instance_backup_properties` -
  Compute Engine specific backup properties.
  Structure is [documented below](#nested_compute_instance_backup_properties).

* `backup_appliance_backup_properties` -
  A nested object resource
  Structure is [documented below](#nested_backup_appliance_backup_properties).

* `backup_type` -
  Type of the backup, unspecified, scheduled or ondemand.

* `gcp_backup_plan_info` -
  Configuration for a Google Cloud resource.
  Structure is [documented below](#nested_gcp_backup_plan_info).

* `resource_size_bytes` -
  Source resource size in bytes at the time of the backup.

* `terraform_labels` -
  The combination of labels configured directly on the resource
   and default labels configured on the provider.

* `effective_labels` -
  All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.


<a name="nested_service_locks"></a>The `service_locks` block contains:

* `lock_until_time` -
  (Required)
  The time after which this lock is not considered valid and will no longer protect the Backup from deletion.

* `backup_appliance_lock_info` -
  (Optional)
  A nested object resource
  Structure is [documented below](#nested_backup_appliance_lock_info).

* `service_lock_info` -
  (Output)
  A nested object resource
  Structure is [documented below](#nested_service_lock_info).


<a name="nested_backup_appliance_lock_info"></a>The `backup_appliance_lock_info` block supports:

* `backup_appliance_id` -
  (Required)
  The ID of the backup/recovery appliance that created this lock.

* `backup_appliance_name` -
  (Required)
  The name of the backup/recovery appliance that created this lock.

* `lock_reason` -
  (Required)
  The reason for the lock: e.g. MOUNT/RESTORE/BACKUP/etc. The value of this string is only meaningful to the client and it is not interpreted by the BackupVault service.

* `job_name` -
  (Optional)
  The job name on the backup/recovery appliance that created this lock.

* `backup_image` -
  (Optional)
  The image name that depends on this Backup.

* `sla_id` -
  (Optional)
  The SLA on the backup/recovery appliance that owns the lock.

<a name="nested_service_lock_info"></a>The `service_lock_info` block contains:

* `operation` -
  (Output)
  The name of the operation that created this lock. The lock will automatically be released when the operation completes.

<a name="nested_compute_instance_backup_properties"></a>The `compute_instance_backup_properties` block contains:

* `description` -
  (Optional)
  An optional text description for the instances that are created from these properties.

* `tags` -
  (Optional)
  A list of tags to apply to the instances that are created from these properties. The tags identify valid sources or targets for network firewalls. The setTags method can modify this list of tags. Each tag within the list must comply with RFC1035 (https://www.ietf.org/rfc/rfc1035.txt).
  Structure is [documented below](#nested_tags).

* `machine_type` -
  (Optional)
  The machine type to use for instances that are created from these properties.

* `can_ip_forward` -
  (Optional)
  Enables instances created based on these properties to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify `true`. If unsure, leave this set to `false`. See the https://cloud.google.com/vpc/docs/using-routes#canipforward documentation for more information.

* `network_interface` -
  (Optional)
  An array of network access configurations for this interface.
  Structure is [documented below](#nested_network_interface).

* `disk` -
  (Optional)
  An array of disks that are associated with the instances that are created from these properties.
  Structure is [documented below](#nested_disk).


<a name="nested_tags"></a>The `tags` block supports:

* `items` -
  (Optional)
  An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.

<a name="nested_network_interface"></a>The `network_interface` block supports:

* `network` -
  (Optional)
  URL of the VPC network resource for this instance.

* `subnetwork` -
  (Optional)
  The URL of the Subnetwork resource for this instance.

* `ip_address` -
  (Optional)
  An IPv4 internal IP address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.

* `ipv6_address` -
  (Optional)
  An IPv6 internal network address for this network interface. To use a static internal IP address, it must be unused and in the same region as the instance's zone. If not specified, Google Cloud will automatically assign an internal IPv6 address from the instance's subnetwork.

* `internal_ipv6_prefix_length` -
  (Optional)
  The prefix length of the primary internal IPv6 range.

* `name` -
  (Output)
  The name of the network interface, which is generated by the server.

* `access_configs` -
  (Optional)
  An array of configurations for this interface. Currently, only one access config,ONE_TO_ONE_NAT is supported. If there are no accessConfigs specified, then this instance will have no external internet access.
  Structure is [documented below](#nested_access_configs).

* `ipv6_access_configs` -
  (Optional)
  An array of IPv6 access configurations for this interface. Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there is no ipv6AccessConfig specified, then this instance will have no external IPv6 Internet access.
  Structure is [documented below](#nested_ipv6_access_configs).

* `alias_ip_ranges` -
  (Optional)
  An array of alias IP ranges for this network interface. You can only specify this field for network interfaces in VPC networks.
  Structure is [documented below](#nested_alias_ip_ranges).

* `stack_type` -
  (Optional)
  The stack type for this network interface.
  Default value is `STACK_TYPE_UNSPECIFIED`.
  Possible values are: `STACK_TYPE_UNSPECIFIED`, `IPV4_ONLY`, `IPV4_IPV6`.

* `ipv6_access_type` -
  (Optional)
  One of EXTERNAL, INTERNAL to indicate whether the IP can be accessed from the Internet. This field is always inherited from its subnetwork.
  Default value is `UNSPECIFIED_IPV6_ACCESS_TYPE`.
  Possible values are: `UNSPECIFIED_IPV6_ACCESS_TYPE`, `INTERNAL`, `EXTERNAL`.

* `queue_count` -
  (Optional)
  The networking queue count that's specified by users for the network interface. Both Rx and Tx queues will be set to this number. It'll be empty if not specified by the users.

* `nic_type` -
  (Optional)
  The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
  Default value is `NIC_TYPE_UNSPECIFIED`.
  Possible values are: `NIC_TYPE_UNSPECIFIED`, `VIRTIO_NET`, `GVNIC`.

* `network_attachment` -
  (Optional)
  The URL of the network attachment that this interface should connect to in the following format: projects/{project_number}/regions/{region_name}/networkAttachments/{network_attachment_name}.


<a name="nested_access_configs"></a>The `access_configs` block supports:

* `type` -
  (Optional)
  In accessConfigs (IPv4), the default and only option is ONE_TO_ONE_NAT. In ipv6AccessConfigs, the default and only option is DIRECT_IPV6.
  Default value is `ACCESS_TYPE_UNSPECIFIED`.
  Possible values are: `ACCESS_TYPE_UNSPECIFIED`, `ONE_TO_ONE_NAT`, `DIRECT_IPV6`.

* `name` -
  (Optional)
  The name of this access configuration.

* `external_ip` -
  (Optional)
  The external IP address of this access configuration.

* `external_ipv6` -
  (Optional)
  The external IPv6 address of this access configuration.

* `external_ipv6_prefix_length` -
  (Optional)
  The prefix length of the external IPv6 range.

* `set_public_ptr` -
  (Optional)
  Specifies whether a public DNS 'PTR' record should be created to map the external IP address of the instance to a DNS domain name.

* `public_ptr_domain_name` -
  (Optional)
  The DNS domain name for the public PTR record.

* `network_tier` -
  (Optional)
  This signifies the networking tier used for configuring this access
  Default value is `NETWORK_TIER_UNSPECIFIED`.
  Possible values are: `NETWORK_TIER_UNSPECIFIED`, `PREMIUM`, `STANDARD`.

<a name="nested_ipv6_access_configs"></a>The `ipv6_access_configs` block supports:

* `type` -
  (Optional)
  In accessConfigs (IPv4), the default and only option is ONE_TO_ONE_NAT. In ipv6AccessConfigs, the default and only option is DIRECT_IPV6.
  Default value is `ACCESS_TYPE_UNSPECIFIED`.
  Possible values are: `ACCESS_TYPE_UNSPECIFIED`, `ONE_TO_ONE_NAT`, `DIRECT_IPV6`.

* `name` -
  (Optional)
  The name of this access configuration.

* `external_ip` -
  (Optional)
  The external IP address of this access configuration.

* `external_ipv6` -
  (Optional)
  The external IPv6 address of this access configuration.

* `external_ipv6_prefix_length` -
  (Optional)
  The prefix length of the external IPv6 range.

* `set_public_ptr` -
  (Optional)
  Specifies whether a public DNS 'PTR' record should be created to map the external IP address of the instance to a DNS domain name.

* `public_ptr_domain_name` -
  (Optional)
  The DNS domain name for the public PTR record.

* `network_tier` -
  (Optional)
  This signifies the networking tier used for configuring this access
  Default value is `NETWORK_TIER_UNSPECIFIED`.
  Possible values are: `NETWORK_TIER_UNSPECIFIED`, `PREMIUM`, `STANDARD`.

<a name="nested_alias_ip_ranges"></a>The `alias_ip_ranges` block supports:

* `ip_cidr_range` -
  (Optional)
  The IP alias ranges to allocate for this interface.

* `subnetwork_range_name` -
  (Optional)
  The name of a subnetwork secondary IP range from which to allocate an IP alias range. If not specified, the primary range of the subnetwork is used.

<a name="nested_disk"></a>The `disk` block supports:

* `initialize_params` -
  (Optional)
  Specifies the parameters to initialize this disk.
  Structure is [documented below](#nested_initialize_params).

* `device_name` -
  (Optional)
  This is used as an identifier for the disks. This is the unique name has to provided to modify disk parameters like disk_name and replica_zones (in case of RePDs)

* `kind` -
  (Optional)
  Type of the resource.

* `mode` -
  (Optional)
  The mode in which to attach this disk.
  Default value is `DISK_MODE_UNSPECIFIED`.
  Possible values are: `DISK_MODE_UNSPECIFIED`, `READ_WRITE`, `READ_ONLY`, `LOCKED`.

* `source` -
  (Optional)
  Specifies a valid partial or full URL to an existing Persistent Disk resource.

* `index` -
  (Optional)
  A zero-based index to this disk, where 0 is reserved for the boot disk.

* `boot` -
  (Optional)
  Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.

* `auto_delete` -
  (Optional)
  Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).

* `license` -
  (Optional)
  Any valid publicly visible licenses.

* `disk_interface` -
  (Optional)
  Specifies the disk interface to use for attaching this disk.
  Default value is `DISK_INTERFACE_UNSPECIFIED`.
  Possible values are: `DISK_INTERFACE_UNSPECIFIED`, `SCSI`, `NVME`, `NVDIMM`, `ISCSI`.

* `guest_os_feature` -
  (Optional)
  A list of features to enable on the guest operating system. Applicable only for bootable images.
  Structure is [documented below](#nested_guest_os_feature).

* `disk_encryption_key` -
  (Optional)
  Encrypts or decrypts a disk using a customer-supplied encryption key.
  Structure is [documented below](#nested_disk_encryption_key).

* `disk_size_gb` -
  (Optional)
  The size of the disk in GB.

* `saved_state` -
  (Output)
  The state of the disk.

* `disk_type` -
  (Output)
  The URI of the disk type resource. For example: projects/project/zones/zone/diskTypes/pd-standard or pd-ssd

* `type` -
  (Optional)
  Specifies the type of the disk.
  Default value is `DISK_TYPE_UNSPECIFIED`.
  Possible values are: `DISK_TYPE_UNSPECIFIED`, `SCRATCH`, `PERSISTENT`.


<a name="nested_initialize_params"></a>The `initialize_params` block supports:

* `disk_name` -
  (Optional)
  Specifies the disk name. If not specified, the default is to use the name of the instance.

* `replica_zones` -
  (Optional)
  URL of the zone where the disk should be created. Required for each regional disk associated with the instance.

<a name="nested_guest_os_feature"></a>The `guest_os_feature` block supports:

* `type` -
  (Optional)
  The ID of a supported feature.
  Default value is `FEATURE_TYPE_UNSPECIFIED`.
  Possible values are: `FEATURE_TYPE_UNSPECIFIED`, `VIRTIO_SCSI_MULTIQUEUE`, `WINDOWS`, `MULTI_IP_SUBNET`, `UEFI_COMPATIBLE`, `SECURE_BOOT`, `GVNIC`, `SEV_CAPABLE`, `BARE_METAL_LINUX_COMPATIBLE`, `SUSPEND_RESUME_COMPATIBLE`, `SEV_LIVE_MIGRATABLE`, `SEV_SNP_CAPABLE`, `TDX_CAPABLE`, `IDPF`, `SEV_LIVE_MIGRATABLE_V2`.

<a name="nested_disk_encryption_key"></a>The `disk_encryption_key` block supports:

* `raw_key` -
  (Optional)
  Specifies a 256-bit customer-supplied encryption key.

* `rsa_encrypted_key` -
  (Optional)
  RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource.

* `kms_key_name` -
  (Optional)
  The name of the encryption key that is stored in Google Cloud KMS.

* `kms_key_service_account` -
  (Optional)
  The service account being used for the encryption request for the given KMS key. If absent, the Compute Engine default service account is used.

<a name="nested_backup_appliance_backup_properties"></a>The `backup_appliance_backup_properties` block contains:

* `generation_id` -
  (Output)
  The numeric generation ID of the backup (monotonically increasing).

* `finalize_time` -
  (Output)
  The time when this backup object was finalized (if none, backup is not finalized).

* `recovery_range_start_time` -
  (Optional)
  The earliest timestamp of data available in this Backup.

* `recovery_range_end_time` -
  (Optional)
  The latest timestamp of data available in this Backup.

<a name="nested_gcp_backup_plan_info"></a>The `gcp_backup_plan_info` block contains:

* `backup_plan` -
  (Optional)
  Resource name of backup plan by which workload is protected at the time of the backup. Format: projects/{project}/locations/{location}/backupPlans/{backupPlanId}

* `backup_plan_rule_id` -
  (Optional)
  The rule id of the backup plan which triggered this backup in case of scheduled backup or used for

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 0 minutes.
- `update` - Default is 0 minutes.
- `delete` - Default is 20 minutes.

## Import


Backup can be imported using any of these accepted formats:

* `projects/{{project}}/locations/{{location}}/backupVaults/{{backupvault}}/dataSources/{{datasource}}/backups/{{backup}}/{{name}}`
* `{{project}}/{{location}}/{{backupvault}}/{{datasource}}/{{backup}}/{{name}}`
* `{{location}}/{{backupvault}}/{{datasource}}/{{backup}}/{{name}}`


In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Backup using one of the formats above. For example:

```tf
import {
  id = "projects/{{project}}/locations/{{location}}/backupVaults/{{backupvault}}/dataSources/{{datasource}}/backups/{{backup}}/{{name}}"
  to = google_backup_dr_backup.default
}
```

When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), Backup can be imported using one of the formats above. For example:

```
$ terraform import google_backup_dr_backup.default projects/{{project}}/locations/{{location}}/backupVaults/{{backupvault}}/dataSources/{{datasource}}/backups/{{backup}}/{{name}}
$ terraform import google_backup_dr_backup.default {{project}}/{{location}}/{{backupvault}}/{{datasource}}/{{backup}}/{{name}}
$ terraform import google_backup_dr_backup.default {{location}}/{{backupvault}}/{{datasource}}/{{backup}}/{{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
