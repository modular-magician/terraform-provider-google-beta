---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Vertex AI"
page_title: "Google: google_vertex_ai_metadata_schema"
description: |-
  Instance of a general MetadataSchema.
---

# google\_vertex\_ai\_metadata\_schema

Instance of a general MetadataSchema.

~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/guides/provider_versions.html) for more details on beta resources.

To get more information about MetadataSchema, see:

* [API documentation](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.metadataStores.metadataSchemas)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/vertex-ai/docs)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=vertex_ai_metadata_schema&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Vertex Ai Metadata Schema


```hcl
resource "google_vertex_ai_metadata_store" "store" {
  provider      = google-beta
  name          = "test-schema"
  description   = "Store to test the terraform module"
  region        = "us-central1"
}

resource "google_vertex_ai_metadata_schema" "schema" {
  provider = google-beta
  description = "Schema to test the terraform module"
  metadatastore = google_vertex_ai_metadata_store.store.id
  schema = <<-EOT
    title: custom.Dataset
    version: 0.0.1
    type: object
    additionalProperties: false
    properties:
      container_format:
        type: string
      payload_format:
        type: string
  EOT
  schema_version = "0.0.1"
  schema_type = "ARTIFACT_TYPE"
}
```

## Argument Reference

The following arguments are supported:


* `schema` -
  (Required)
  The raw YAML string representation of the MetadataSchema. The combination of [MetadataSchema.version] and the schema name given by title in [MetadataSchema.schema] must be unique within a MetadataStore. The schema is defined as an OpenAPI 3.0.2

* `metadatastore` -
  (Required)
  The name of Metadata Store to use, in the format projects/{project}/locations/{location}/metadatastore/{metadatastore}.


- - -


* `metadata_schema_id` -
  (Optional)
  The Metadata Schema Id.

* `description` -
  (Optional)
  Description of the Metadata Schema

* `schema_version` -
  (Optional)
  The version of the MetadataSchema. The version's format must match the following regular expression: ^[0-9]+[.][0-9]+[.][0-9]+$, which would allow to order/compare different versions. Example: 1.0.0, 1.0.1, etc.

* `schema_type` -
  (Optional)
  The type of the MetadataSchema. This is a property that identifies which metadata types will use the MetadataSchema.
  Possible values are `METADATA_SCHEMA_TYPE_UNSPECIFIED`, `ARTIFACT_TYPE`, `EXECUTION_TYPE`, and `CONTEXT_TYPE`.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `{{metadatastore}}/metadataSchemas/{{metadata_schema_id}}`

* `name` -
  The resource name of the MetadataSchema.


## Timeouts

This resource provides the following
[Timeouts](/docs/configuration/resources.html#timeouts) configuration options:

- `create` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


MetadataSchema can be imported using any of these accepted formats:

```
$ terraform import google_vertex_ai_metadata_schema.default {{metadatastore}}/metadataSchemas/{{metadata_schema_id}}
$ terraform import google_vertex_ai_metadata_schema.default {{metadatastore}}/{{metadata_schema_id}}
```
