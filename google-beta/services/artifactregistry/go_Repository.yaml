# the license inside this block applies to this file
# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
name: 'Repository'
description: |
	A repository for storing artifacts
references:
	guides:
		- 'Official Documentation': 'https://cloud.google.com/artifact-registry/docs/overview'
	api: 'https://cloud.google.com/artifact-registry/docs/reference/rest/v1/projects.locations.repositories'
docs:
id_format: 'projects/{{project}}/locations/{{location}}/repositories/{{repository_id}}'
base_url: 'projects/{{project}}/locations/{{location}}/repositories'
self_link: 'projects/{{project}}/locations/{{location}}/repositories/{{repository_id}}'
create_url: 'projects/{{project}}/locations/{{location}}/repositories?repository_id={{repository_id}}'
update_verb: 'PATCH'
update_mask: true
import_format:
		- 'projects/{{project}}/locations/{{location}}/repositories/{{repository_id}}'
		- '{{repository_id}}'
timeouts:
	insert_minutes: 20
	update_minutes: 20
	delete_minutes: 20
autogen_async: true
async:
	operation: 
		base_url: '{{op_id}}'
		path: 'name'
		wait_ms: '1000'
	result: 
		path: 'response'
		resource_inside_response: true
	error: 
		path: 'error'
		message: 'message'
iam_policy:
		method_name_separator: ':'
		allowed_iam_role: 'roles/artifactregistry.reader'
		parent_resource_attribute: 'repository'
		base_url: 'projects/{{project}}/locations/{{location}}/repositories/{{name}}'
		self_link: 'projects/{{project}}/locations/{{location}}/repositories/{{name}}'
		import_format:
			- 'projects/{{project}}/locations/{{location}}/repositories/{{repository}}'
			- '{{repository}}'
custom_code:
		constants: 'templates/terraform/constants/artifact_registry_repository.go.erb'
		encoder: 'templates/terraform/encoders/location_from_region.go.erb'
examples:
	- name: 'artifact_registry_repository_basic'
		primary_resource_id: 'my-repo'
		primary_resource_name: 'my-repo'
		vars:
			- repository_id: 'my-repository'
			- description: 'example docker repository'
	- name: 'artifact_registry_repository_docker'
		primary_resource_id: 'my-repo'
		primary_resource_name: 'my-repo'
		vars:
			- repository_id: 'my-repository'
			- description: 'example docker repository'
	- name: 'artifact_registry_repository_cmek'
		primary_resource_id: 'my-repo'
		primary_resource_name: 'my-repo'
		vars:
			- repository_id: 'my-repository'
			- kms_key_name: 'kms-key'
		test_vars_overrides:
			- 'kms_key_name': 'acctest.BootstrapKMSKeyInLocation(t, "us-central1").CryptoKey.Name'
	- name: 'artifact_registry_repository_virtual'
		primary_resource_id: 'my-repo'
		primary_resource_name: 'my-repo'
		vars:
			- repository_id: 'my-repository'
			- description: 'example virtual docker repository'
			- upstream_repository_id: 'my-repository-upstream'
			- upstream_description: 'example docker repository (upstream source)'
			- upstream_policy_id: 'my-repository-upstream'
	- name: 'artifact_registry_repository_remote'
		primary_resource_id: 'my-repo'
		primary_resource_name: 'my-repo'
		vars:
			- repository_id: 'my-repository'
			- description: 'example remote docker repository'
	- name: 'artifact_registry_repository_remote_apt'
		primary_resource_id: 'my-repo'
		primary_resource_name: 'my-repo'
		vars:
			- repository_id: 'debian-buster'
			- description: 'example remote apt repository'
	- name: 'artifact_registry_repository_remote_yum'
		primary_resource_id: 'my-repo'
		primary_resource_name: 'my-repo'
		vars:
			- repository_id: 'centos-8'
			- description: 'example remote yum repository'
	- name: 'artifact_registry_repository_cleanup'
		primary_resource_id: 'my-repo'
		primary_resource_name: 'my-repo'
		vars:
			- repository_id: 'my-repository'
			- description: 'example docker repository with cleanup policies'
	- name: 'artifact_registry_repository_remote_custom'
		primary_resource_id: 'my-repo'
		primary_resource_name: 'my-repo'
		vars:
			- repository_id: 'example-custom-remote'
			- description: 'example remote docker repository with credentials'
			- secret_id: 'example-secret'
			- secret_resource_id: 'example-custom-remote-secret'
			- username: 'remote-username'
			- secret_data: 'remote-password'
parameters:
properties:
	- name: 'name'
		type: String
		description: 'The name of the repository, for example:
"repo1"'
		output: true
		custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
		custom_expand: 'templates/terraform/custom_expand/shortname_to_url.go.erb'
	- name: 'repository_id'
		type: String
		description: 'The last part of the repository name, for example:
"repo1"'
		url_param_only: true
		required: true
		immutable: true
		custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
	- name: 'location'
		type: String
		description: 'The name of the location this repository is located in.'
		url_param_only: true
		required: false
		immutable: true
		default_from_api: true
	- name: 'format'
		type: String
		description: 'The format of packages that are stored in the repository. Supported formats
can be found [here](https://cloud.google.com/artifact-registry/docs/supported-formats).
You can only create alpha formats if you are a member of the
[alpha user group](https://cloud.google.com/artifact-registry/docs/supported-formats#alpha-access).'
		required: true
		immutable: true
		diff_suppress_func: 'tpgresource.CaseDiffSuppress'
	- name: 'description'
		type: String
		description: 'The user-provided description of the repository.'
	- name: 'labels'
		type: KeyValueLabels
		description: 'Labels with user-defined metadata.
This field may contain up to 64 entries. Label keys and values may be no
longer than 63 characters. Label keys must begin with a lowercase letter
and may only contain lowercase letters, numeric characters, underscores,
and dashes.


**Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
Please refer to the field `effective_labels` for all of the labels present on the resource.'
		immutable: false
	- name: 'kmsKeyName'
		type: String
		description: 'The Cloud KMS resource name of the customer managed encryption key thatâ€™s
used to encrypt the contents of the Repository. Has the form:
`projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`.
This value may not be changed after the Repository has been created.'
		immutable: true
	- name: 'createTime'
		type: Time
		description: 'The time when the repository was created.'
		output: true
	- name: 'updateTime'
		type: Time
		description: 'The time when the repository was last updated.'
		output: true
	- name: 'dockerConfig'
		type: NestedObject
		description: 'Docker repository config contains repository level configuration for the repositories of docker type.'
		properties:
    	- name: 'immutableTags'
    		type: Boolean
    		description: 'The repository which enabled this flag prevents all tags from being modified, moved or deleted. This does not prevent tags from being created.'
	- name: 'mavenConfig'
		type: NestedObject
		description: 'MavenRepositoryConfig is maven related repository details.
Provides additional configuration details for repositories of the maven
format type.'
		allow_empty_object: true
		properties:
    	- name: 'allowSnapshotOverwrites'
    		type: Boolean
    		description: 'The repository with this flag will allow publishing the same
    snapshot versions.'
    		immutable: true
    	- name: 'versionPolicy'
    		type: Enum
    		description: 'Version policy defines the versions that the registry will accept.'
    		immutable: true
    		custom_flatten: 'templates/terraform/custom_flatten/default_if_empty.erb'
    		default_value: VERSION_POLICY_UNSPECIFIED
    		values:
    			- 'VERSION_POLICY_UNSPECIFIED'
    			- 'RELEASE'
    			- 'SNAPSHOT'
    			- ''
	- name: 'mode'
		type: Enum
		description: 'The mode configures the repository to serve artifacts from different sources.'
		immutable: true
		default_value: STANDARD_REPOSITORY
		values:
			- 'STANDARD_REPOSITORY'
			- 'VIRTUAL_REPOSITORY'
			- 'REMOTE_REPOSITORY'
			- ''
	- name: 'virtualRepositoryConfig'
		type: NestedObject
		description: 'Configuration specific for a Virtual Repository.'
		conflicts:
			- remote_repository_config
		properties:
    	- name: 'upstreamPolicies'
    		type: Array
    		description: 'Policies that configure the upstream artifacts distributed by the Virtual
    Repository. Upstream policies cannot be set on a standard repository.'
    		diff_suppress_func: 'upstreamPoliciesDiffSuppress'
    		item_type: NestedObject
    			properties:
                	- name: 'id'
                		type: String
                		description: 'The user-provided ID of the upstream policy.'
                	- name: 'repository'
                		type: String
                		description: 'A reference to the repository resource, for example:
                "projects/p1/locations/us-central1/repository/repo1".'
                	- name: 'priority'
                		type: Integer
                		description: 'Entries with a greater priority value take precedence in the pull order.'
	- name: 'cleanupPolicies'
		type: Map
		description: 'Cleanup policies for this repository. Cleanup policies indicate when
certain package versions can be automatically deleted.
Map keys are policy IDs supplied by users during policy creation. They must
unique within a repository and be under 128 characters in length.'
		value_type: '{
  "@description": "A nested object resource",
  "@key_expander": "tpgresource.ExpandString",
  "action": {
    "@description": "Policy action.",
    "@values": [
      "DELETE",
      "KEEP",
      ""
    ],
    "@key_expander": "tpgresource.ExpandString"
  },
  "condition": {
    "@description": "Policy condition for matching versions.",
    "@key_expander": "tpgresource.ExpandString",
    "tagState": {
      "@description": "Match versions by tag status.",
      "@default_value": "ANY",
      "@values": [
        "TAGGED",
        "UNTAGGED",
        "ANY",
        ""
      ],
      "@key_expander": "tpgresource.ExpandString"
    },
    "tagPrefixes": {
      "@description": "Match versions by tag prefix. Applied on any prefix match.",
      "@item_type": "Api::Type::String",
      "@key_expander": "tpgresource.ExpandString"
    },
    "versionNamePrefixes": {
      "@description": "Match versions by version name prefix. Applied on any prefix match.",
      "@item_type": "Api::Type::String",
      "@key_expander": "tpgresource.ExpandString"
    },
    "packageNamePrefixes": {
      "@description": "Match versions by package prefix. Applied on any prefix match.",
      "@item_type": "Api::Type::String",
      "@key_expander": "tpgresource.ExpandString"
    },
    "olderThan": {
      "@description": "Match versions older than a duration.",
      "@key_expander": "tpgresource.ExpandString",
      "@diff_suppress_func": "tpgresource.DurationDiffSuppress"
    },
    "newerThan": {
      "@description": "Match versions newer than a duration.",
      "@key_expander": "tpgresource.ExpandString",
      "@diff_suppress_func": "tpgresource.DurationDiffSuppress"
    }
  },
  "mostRecentVersions": {
    "@description": "Policy condition for retaining a minimum number of versions. May only be\nspecified with a Keep action.",
    "@key_expander": "tpgresource.ExpandString",
    "packageNamePrefixes": {
      "@description": "Match versions by package prefix. Applied on any prefix match.",
      "@item_type": "Api::Type::String",
      "@key_expander": "tpgresource.ExpandString"
    },
    "keepCount": {
      "@description": "Minimum number of versions to keep.",
      "@key_expander": "tpgresource.ExpandString"
    }
  }
}'
		key_name: 'id'
		key_description: 'The policy ID. Must be unique within a repository.'
	- name: 'remoteRepositoryConfig'
		type: NestedObject
		description: 'Configuration specific for a Remote Repository.'
		immutable: true
		conflicts:
			- virtual_repository_config
		properties:
    	- name: 'description'
    		type: String
    		description: 'The description of the remote source.'
    		immutable: true
    	- name: 'aptRepository'
    		type: NestedObject
    		description: 'Specific settings for an Apt remote repository.'
    		immutable: true
    		exactly_one_of:
    			- 'remoteRepositoryConfig.0.apt_repository'
    			- 'remoteRepositoryConfig.0.docker_repository'
    			- 'remoteRepositoryConfig.0.maven_repository'
    			- 'remoteRepositoryConfig.0.npm_repository'
    			- 'remoteRepositoryConfig.0.python_repository'
    			- 'remoteRepositoryConfig.0.yum_repository'
    		properties:
            	- name: 'publicRepository'
            		type: NestedObject
            		description: 'One of the publicly available Apt repositories supported by Artifact Registry.'
            		immutable: true
            		properties:
                        	- name: 'repositoryBase'
                        		type: Enum
                        		description: 'A common public repository base for Apt, e.g. `"debian/dists/buster"`'
                        		required: true
                        		immutable: true
                        		values:
                        			- 'DEBIAN'
                        			- 'UBUNTU'
                        	- name: 'repositoryPath'
                        		type: String
                        		description: 'Specific repository from the base.'
                        		required: true
                        		immutable: true
    	- name: 'dockerRepository'
    		type: NestedObject
    		description: 'Specific settings for a Docker remote repository.'
    		immutable: true
    		exactly_one_of:
    			- 'remoteRepositoryConfig.0.apt_repository'
    			- 'remoteRepositoryConfig.0.docker_repository'
    			- 'remoteRepositoryConfig.0.maven_repository'
    			- 'remoteRepositoryConfig.0.npm_repository'
    			- 'remoteRepositoryConfig.0.python_repository'
    			- 'remoteRepositoryConfig.0.yum_repository'
    		properties:
            	- name: 'publicRepository'
            		type: Enum
            		description: 'Address of the remote repository.'
            		immutable: true
            		exactly_one_of:
            			- 'remoteRepositoryConfig.0.docker_repository.0.public_repository'
            		default_value: DOCKER_HUB
            		values:
            			- 'DOCKER_HUB'
            			- ''
    	- name: 'mavenRepository'
    		type: NestedObject
    		description: 'Specific settings for a Maven remote repository.'
    		immutable: true
    		exactly_one_of:
    			- 'remoteRepositoryConfig.0.apt_repository'
    			- 'remoteRepositoryConfig.0.docker_repository'
    			- 'remoteRepositoryConfig.0.maven_repository'
    			- 'remoteRepositoryConfig.0.npm_repository'
    			- 'remoteRepositoryConfig.0.python_repository'
    			- 'remoteRepositoryConfig.0.yum_repository'
    		properties:
            	- name: 'publicRepository'
            		type: Enum
            		description: 'Address of the remote repository.'
            		immutable: true
            		exactly_one_of:
            			- 'remoteRepositoryConfig.0.maven_repository.0.public_repository'
            		default_value: MAVEN_CENTRAL
            		values:
            			- 'MAVEN_CENTRAL'
            			- ''
    	- name: 'npmRepository'
    		type: NestedObject
    		description: 'Specific settings for an Npm remote repository.'
    		immutable: true
    		exactly_one_of:
    			- 'remoteRepositoryConfig.0.apt_repository'
    			- 'remoteRepositoryConfig.0.docker_repository'
    			- 'remoteRepositoryConfig.0.maven_repository'
    			- 'remoteRepositoryConfig.0.npm_repository'
    			- 'remoteRepositoryConfig.0.python_repository'
    			- 'remoteRepositoryConfig.0.yum_repository'
    		properties:
            	- name: 'publicRepository'
            		type: Enum
            		description: 'Address of the remote repository.'
            		immutable: true
            		exactly_one_of:
            			- 'remoteRepositoryConfig.0.npm_repository.0.public_repository'
            		default_value: NPMJS
            		values:
            			- 'NPMJS'
            			- ''
    	- name: 'pythonRepository'
    		type: NestedObject
    		description: 'Specific settings for a Python remote repository.'
    		immutable: true
    		exactly_one_of:
    			- 'remoteRepositoryConfig.0.apt_repository'
    			- 'remoteRepositoryConfig.0.docker_repository'
    			- 'remoteRepositoryConfig.0.maven_repository'
    			- 'remoteRepositoryConfig.0.npm_repository'
    			- 'remoteRepositoryConfig.0.python_repository'
    			- 'remoteRepositoryConfig.0.yum_repository'
    		properties:
            	- name: 'publicRepository'
            		type: Enum
            		description: 'Address of the remote repository.'
            		immutable: true
            		exactly_one_of:
            			- 'remoteRepositoryConfig.0.python_repository.0.public_repository'
            		default_value: PYPI
            		values:
            			- 'PYPI'
            			- ''
    	- name: 'yumRepository'
    		type: NestedObject
    		description: 'Specific settings for an Yum remote repository.'
    		immutable: true
    		exactly_one_of:
    			- 'remoteRepositoryConfig.0.apt_repository'
    			- 'remoteRepositoryConfig.0.docker_repository'
    			- 'remoteRepositoryConfig.0.maven_repository'
    			- 'remoteRepositoryConfig.0.npm_repository'
    			- 'remoteRepositoryConfig.0.python_repository'
    			- 'remoteRepositoryConfig.0.yum_repository'
    		properties:
            	- name: 'publicRepository'
            		type: NestedObject
            		description: 'One of the publicly available Yum repositories supported by Artifact Registry.'
            		immutable: true
            		properties:
                        	- name: 'repositoryBase'
                        		type: Enum
                        		description: 'A common public repository base for Yum.'
                        		required: true
                        		immutable: true
                        		values:
                        			- 'CENTOS'
                        			- 'CENTOS_DEBUG'
                        			- 'CENTOS_VAULT'
                        			- 'CENTOS_STREAM'
                        			- 'ROCKY'
                        			- 'EPEL'
                        	- name: 'repositoryPath'
                        		type: String
                        		description: 'Specific repository from the base, e.g. `"centos/8-stream/BaseOS/x86_64/os"`'
                        		required: true
                        		immutable: true
    	- name: 'upstreamCredentials'
    		type: NestedObject
    		description: 'The credentials used to access the remote repository.'
    		immutable: true
    		properties:
            	- name: 'usernamePasswordCredentials'
            		type: NestedObject
            		description: 'Use username and password to access the remote repository.'
            		immutable: true
            		properties:
                        	- name: 'username'
                        		type: String
                        		description: 'The username to access the remote repository.'
                        		immutable: true
                        	- name: 'passwordSecretVersion'
                        		type: String
                        		description: 'The Secret Manager key version that holds the password to access the
                        remote repository. Must be in the format of
                        `projects/{project}/secrets/{secret}/versions/{version}`.'
                        		immutable: true
	- name: 'cleanupPolicyDryRun'
		type: Boolean
		description: 'If true, the cleanup pipeline is prevented from deleting versions in this
repository.'
