// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Magic Modules and manual
//     changes will be clobbered when the file is regenerated.
//
//     Please read more about how to change this file in
//     .github/CONTRIBUTING.md.
//
// ----------------------------------------------------------------------------

package google

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccFirebaseHostingSiteConfig_firebasehostingSiteconfigBasicExample(t *testing.T) {
	t.Parallel()

	context := map[string]interface{}{
		"project_id":    getTestProjectFromEnv(),
		"random_suffix": randString(t, 10),
	}

	vcrTest(t, resource.TestCase{
		PreCheck:  func() { testAccPreCheck(t) },
		Providers: testAccProvidersOiCS,
		Steps: []resource.TestStep{
			{
				Config: testAccFirebaseHostingSiteConfig_firebasehostingSiteconfigBasicExample(context),
			},
			{
				ResourceName:            "google_firebase_hosting_site_config.default",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"site_id"},
			},
		},
	})
}

func testAccFirebaseHostingSiteConfig_firebasehostingSiteconfigBasicExample(context map[string]interface{}) string {
	return Nprintf(`
resource "google_firebase_hosting_site" "default" {
  provider = google-beta
  project  = "%{project_id}"
  site_id = "tf-test-site-config%{random_suffix}"
}

resource "google_firebase_hosting_site_config" "default" {
  provider = google-beta
  site_id = google_firebase_hosting_site.default.site_id
}
`, context)
}

func TestAccFirebaseHostingSiteConfig_firebasehostingSiteconfigFullExample(t *testing.T) {
	t.Parallel()

	context := map[string]interface{}{
		"project_id":    getTestProjectFromEnv(),
		"random_suffix": randString(t, 10),
	}

	vcrTest(t, resource.TestCase{
		PreCheck:  func() { testAccPreCheck(t) },
		Providers: testAccProvidersOiCS,
		Steps: []resource.TestStep{
			{
				Config: testAccFirebaseHostingSiteConfig_firebasehostingSiteconfigFullExample(context),
			},
			{
				ResourceName:            "google_firebase_hosting_site_config.full",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"site_id"},
			},
		},
	})
}

func testAccFirebaseHostingSiteConfig_firebasehostingSiteconfigFullExample(context map[string]interface{}) string {
	return Nprintf(`
resource "google_firebase_hosting_site" "default" {
  provider = google-beta
  project  = "%{project_id}"
  site_id = "tf-test-site-config-full%{random_suffix}"
}

resource "google_firebase_hosting_site_config" "full" {
  provider = google-beta
  site_id = google_firebase_hosting_site.default.site_id
  max_versions = 100
  cloud_logging_enabled = true
}
`, context)
}
